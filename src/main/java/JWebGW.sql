/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

CREATE DATABASE IF NOT EXISTS `JWebGW` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `JWebGW`;

CREATE TABLE IF NOT EXISTS `AdminUser` (
  `user_id` char(24) NOT NULL,
  `user_name` varchar(50) NOT NULL,
  `bm_id` text DEFAULT NULL,
  `bm_name` text DEFAULT NULL,
  `user_account` varchar(50) NOT NULL,
  `user_password` varchar(50) NOT NULL,
  `user_email` varchar(50) DEFAULT NULL,
  `power_id` text DEFAULT NULL,
  `user_sort` varchar(5) DEFAULT NULL,
  `user_style` char(2) DEFAULT NULL,
  `user_uptimelogin` char(20) DEFAULT NULL,
  `user_time` char(20) DEFAULT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE KEY `user_account` (`user_account`),
  KEY `index4` (`user_sort`),
  KEY `index5` (`user_style`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `AdminUser` DISABLE KEYS */;
INSERT INTO `AdminUser` (`user_id`, `user_name`, `bm_id`, `bm_name`, `user_account`, `user_password`, `user_email`, `power_id`, `user_sort`, `user_style`, `user_uptimelogin`, `user_time`) VALUES
	('201802171403338370000001', '超级管理员', NULL, NULL, 'superadmin#', 'superadmin#', NULL, '', '0-01', '启用', NULL, '2018-02-17 14:03:33'),
	('201802171404503510000002', 'G_Admin', '201708161038567800000003|201708161039129690000004', '小汪科技工作室|总经办', 'admin', 'admin', 'pankeng1988w@163.com', 'Y101,Y101_12,Y101_12_1,Y101_12_2,Y101_11,Y101_11A,Y101_11_0,Y101_11S,Y101_11U,Y101_11D,Y101_1,Y101_2,Y101_2_1,Y101_2_2,Y101_2_3,Y101_13,Y101_3,Y101_4,Y101_4_1,Y101_4_2,Y101_4_3,Y101_5,Y101_6,Y101_6_1,Y101_6_2,Y101_6_3,Y101_7,Y101_8,Y101_8_1,Y101_8_2,Y101_8_3,Y101_14,Y101_9,Y101_10,Y101_10_1,Y101_10_2,Y101_10_3,Y101_15,Y101_15_1A,Y101_15_2,Y101_15_1S,Y101_15_1U,Y101_15_1D,Y101_18_1A,Y101_18_2,Y101_18_1S,Y101_18_1U,Y101_18_1D,Y101_19_1,Y101_16,Y101_16_1A,Y101_16_2,Y101_16_1S,Y101_16_1U,Y101_16_1D,Y101_17_1A,Y101_17_2,Y101_17_1S,Y101_17_1U,Y101_17_1D,Y100,Y100_6,Y100_6_2,Y100_0,Y100_1,Y100_1_1,Y100_1_2,Y100_1_3,Y100_2,Y100_3,Y100_3_1,Y100_3_2,Y100_3_3,J,J5,J51,J52,J51_1,J51_2,J51_3,J4,J41,J42,J43,J43_1,J43_2,J43_3,J44,J44_1,J44_2,J44_3,J44_4,J7_2,J7_2_1,J7_2_2,J7_2_2_1,J7_2_2_2,J7_2_2_3,X,X1,X1_1,X1_2,X1_2_1,X1_2_2,X1_2_3,X1_3,X2,X2_1,X2_2,X2_2_1,X2_2_2,X2_2_3,X2_3,X3,X3_2,X3_3,X3_4', '管理员', '启用', NULL, '2018-02-17 14:04:50');
/*!40000 ALTER TABLE `AdminUser` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `Bean` (
  `bean_zj` char(24) NOT NULL,
  `bean_mc` varchar(255) NOT NULL,
  `mypackage_id` char(24) NOT NULL,
  `mypackage_name` varchar(50) NOT NULL,
  `bean_bz` varchar(255) DEFAULT NULL,
  `bean_px` int(11) DEFAULT NULL,
  PRIMARY KEY (`bean_zj`),
  KEY `bean_mc` (`bean_mc`),
  KEY `mypackage_id` (`mypackage_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `Bean` DISABLE KEYS */;
INSERT INTO `Bean` (`bean_zj`, `bean_mc`, `mypackage_id`, `mypackage_name`, `bean_bz`, `bean_px`) VALUES
	('201805012022167250000001', 'MyTest', '201802191634445960000003', 'wx.web.bean', '', 1),
	('201805012026392780000039', 'MyTest1', '201802191634445960000003', 'wx.web.bean', '', 2),
	('201805021827593120000019', 'Wo', '201802191634445960000003', 'wx.web.bean', '', 3),
	('201805031056597820000001', 'Test', '201802191634445960000003', 'wx.web.bean', '11', 4),
	('201805031058478530000066', 'Test2', '201802191634445960000003', 'wx.web.bean', '11', 5),
	('201805031059100980000099', 'Test21', '201802191634445960000003', 'wx.web.bean', '11', 6),
	('201805031105530870000001', 'qewqe', '201802191634445960000003', 'wx.web.bean', '', 7),
	('201805031122243570000001', 'werw', '201802191634445960000003', 'wx.web.bean', 'q', 8),
	('201805031123565130000001', 'werw1', '201802191634445960000003', 'wx.web.bean', 'q', 9),
	('201805031125179380000064', 'Werwq', '201802191634445960000003', 'wx.web.bean', 'q', 10),
	('201805031128087440000001', 'Werwq3', '201802191634445960000003', 'wx.web.bean', 'q', 11),
	('201805031129477660000001', 'Werwq4', '201802191634445960000003', 'wx.web.bean', 'q', 12),
	('201805031131403080000001', 'Werwq5', '201802191634445960000003', 'wx.web.bean', 'q', 13),
	('201805031133587760000001', 'Werwq6', '201802191634445960000003', 'wx.web.bean', 'q', 14),
	('201805031136441180000063', 'Werwq7', '201802191634445960000003', 'wx.web.bean', 'q', 0),
	('201805031501090050000001', 'GG', '201802191634445960000003', 'wx.web.bean', '', 15),
	('201805040845033570000002', 'Mybean', '201802191634445960000003', 'wx.web.bean', 'aaaa', 16);
/*!40000 ALTER TABLE `Bean` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `Bean2` (
  `bean2_zj` char(24) NOT NULL,
  `bean2_bz` varchar(50) DEFAULT NULL,
  `bean2_key` varchar(200) NOT NULL,
  `bean2_value` text DEFAULT NULL,
  `bean_zj` char(24) NOT NULL,
  PRIMARY KEY (`bean2_zj`),
  KEY `bean2_key` (`bean2_key`),
  KEY `bean_zj` (`bean_zj`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `Bean2` DISABLE KEYS */;
INSERT INTO `Bean2` (`bean2_zj`, `bean2_bz`, `bean2_key`, `bean2_value`, `bean_zj`) VALUES
	('201805012022167250000002', 'bean名必定用户输入', 'mybean_mc', '', '201805012022167250000001'),
	('201805012022167260000003', '备注', 'mybean_bz', '', '201805012022167250000001'),
	('201805012022167260000004', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805012022167250000001'),
	('201805012022167260000005', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805012022167250000001'),
	('201805012022167260000006', 'soo名称 .java', 'name_soo', 'MyTestSoo', '201805012022167250000001'),
	('201805012022167260000007', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805012022167250000001'),
	('201805012022167260000008', 'service名称  .java', 'name_service', 'MyTestService', '201805012022167250000001'),
	('201805012022167260000009', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.MyTest', '201805012022167250000001'),
	('201805012022167260000010', 'web入口类-添加操作的类名  .java', 'name_hmA', 'MyTestADU', '201805012022167250000001'),
	('201805012022167260000011', 'web入口类-删除操作的类名  .java', 'name_hmD', 'MyTestADU', '201805012022167250000001'),
	('201805012022167260000012', 'web入口类-修改操作的类名  .java', 'name_hmU', 'MyTestADU', '201805012022167250000001'),
	('201805012022167260000013', 'web入口类-查询操作的类名  .java', 'name_hmS', 'MyTestS', '201805012022167250000001'),
	('201805012022167260000014', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.MyTest.validate', '201805012022167250000001'),
	('201805012022167260000015', '校验类名  .java', 'name_validate', 'MyTestValidate', '201805012022167250000001'),
	('201805012022167260000016', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.MyTest.cache', '201805012022167250000001'),
	('201805012022167260000017', '缓存处理类名  .java', 'name_cache', 'MyTestCache', '201805012022167250000001'),
	('201805012022167260000018', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.MyTest.vo', '201805012022167250000001'),
	('201805012022167260000019', 'vo类名  .java', 'name_vo', 'MyTestVO', '201805012022167250000001'),
	('201805012022167260000020', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.MyTest', '201805012022167250000001'),
	('201805012022167260000021', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'MyTest_A', '201805012022167250000001'),
	('201805012022167260000022', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'MyTest', '201805012022167250000001'),
	('201805012022167260000023', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'MyTest', '201805012022167250000001'),
	('201805012022167260000024', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'MyTest_U', '201805012022167250000001'),
	('201805012022167260000025', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.MyTest.js', '201805012022167250000001'),
	('201805012022167260000026', 'js 名称 .js', 'vname_admin_js', 'MyTest', '201805012022167250000001'),
	('201805012022167260000027', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.MyTest.css', '201805012022167250000001'),
	('201805012022167260000028', 'css 名称 .css', 'vname_admin_css', 'MyTest', '201805012022167250000001'),
	('201805012022167260000029', '权限代码', 'power_code', '', '201805012022167250000001'),
	('201805012022167260000030', '权限代码 添加', 'power_codeA', '[?p?]A', '201805012022167250000001'),
	('201805012022167260000031', '权限代码 删除', 'power_codeD', '[?p?]D', '201805012022167250000001'),
	('201805012022167270000032', '权限代码 查询', 'power_codeS', '[?p?]S', '201805012022167250000001'),
	('201805012022167270000033', '权限代码 修改', 'power_codeU', '[?p?]U', '201805012022167250000001'),
	('201805012026392780000040', 'bean名必定用户输入', 'mybean_mc', '', '201805012026392780000039'),
	('201805012026392780000041', '备注', 'mybean_bz', '', '201805012026392780000039'),
	('201805012026392780000042', 'bean存放的路径', 'package_bean', 'wx.web.base.bean1', '201805012026392780000039'),
	('201805012026392780000043', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo1', '201805012026392780000039'),
	('201805012026392780000044', 'soo名称 .java', 'name_soo', 'MyTest1Soo1', '201805012026392780000039'),
	('201805012026392780000045', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service1', '201805012026392780000039'),
	('201805012026392780000046', 'service名称  .java', 'name_service', 'MyTest1Service1', '201805012026392780000039'),
	('201805012026392780000047', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.MyTest11', '201805012026392780000039'),
	('201805012026392780000048', 'web入口类-添加操作的类名  .java', 'name_hmA', 'MyTest1ADU1', '201805012026392780000039'),
	('201805012026392780000049', 'web入口类-删除操作的类名  .java', 'name_hmD', 'MyTest1ADU1', '201805012026392780000039'),
	('201805012026392780000050', 'web入口类-修改操作的类名  .java', 'name_hmU', 'MyTest1ADU1', '201805012026392780000039'),
	('201805012026392780000051', 'web入口类-查询操作的类名  .java', 'name_hmS', 'MyTest1S1', '201805012026392780000039'),
	('201805012026392790000052', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.MyTest1.validate1', '201805012026392780000039'),
	('201805012026392790000053', '校验类名  .java', 'name_validate', 'MyTest1Validate1', '201805012026392780000039'),
	('201805012026392790000054', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.MyTest1.cache1', '201805012026392780000039'),
	('201805012026392790000055', '缓存处理类名  .java', 'name_cache', 'MyTest1Cache1', '201805012026392780000039'),
	('201805012026392790000056', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.MyTest1.vo1', '201805012026392780000039'),
	('201805012026392790000057', 'vo类名  .java', 'name_vo', 'MyTest1VO1', '201805012026392780000039'),
	('201805012026392790000058', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.MyTest11', '201805012026392780000039'),
	('201805012026392790000059', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'MyTest1_A1', '201805012026392780000039'),
	('201805012026392790000060', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'MyTest11', '201805012026392780000039'),
	('201805012026392790000061', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'MyTest11', '201805012026392780000039'),
	('201805012026392790000062', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'MyTest1_U1', '201805012026392780000039'),
	('201805012026392790000063', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.MyTest1.js1', '201805012026392780000039'),
	('201805012026392790000064', 'js 名称 .js', 'vname_admin_js', 'MyTest11', '201805012026392780000039'),
	('201805012026392790000065', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.MyTest1.css1', '201805012026392780000039'),
	('201805012026392790000066', 'css 名称 .css', 'vname_admin_css', 'MyTest11', '201805012026392780000039'),
	('201805012026392790000067', '权限代码', 'power_code', '', '201805012026392780000039'),
	('201805012026392790000068', '权限代码 添加', 'power_codeA', '[?p?]A1', '201805012026392780000039'),
	('201805012026392790000069', '权限代码 删除', 'power_codeD', '[?p?]D1', '201805012026392780000039'),
	('201805012026392790000070', '权限代码 查询', 'power_codeS', '[?p?]S1', '201805012026392780000039'),
	('201805012026392790000071', '权限代码 修改', 'power_codeU', '[?p?]U1', '201805012026392780000039'),
	('201805030454243030000001', 'bean名必定用户输入', 'mybean_mc', '', '201805021827593120000019'),
	('201805030454243030000002', '备注', 'mybean_bz', '', '201805021827593120000019'),
	('201805030454243030000003', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805021827593120000019'),
	('201805030454243030000004', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805021827593120000019'),
	('201805030454243040000005', 'soo名称 .java', 'name_soo', 'WoSoo', '201805021827593120000019'),
	('201805030454243040000006', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805021827593120000019'),
	('201805030454243040000007', 'service名称  .java', 'name_service', 'WoService', '201805021827593120000019'),
	('201805030454243040000008', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.Wo', '201805021827593120000019'),
	('201805030454243040000009', 'web入口类-添加操作的类名  .java', 'name_hmA', 'WoADU', '201805021827593120000019'),
	('201805030454243040000010', 'web入口类-删除操作的类名  .java', 'name_hmD', 'WoADU', '201805021827593120000019'),
	('201805030454243040000011', 'web入口类-修改操作的类名  .java', 'name_hmU', 'WoADU', '201805021827593120000019'),
	('201805030454243040000012', 'web入口类-查询操作的类名  .java', 'name_hmS', 'WoS', '201805021827593120000019'),
	('201805030454243040000013', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.Wo.validate', '201805021827593120000019'),
	('201805030454243040000014', '校验类名  .java', 'name_validate', 'WoValidate', '201805021827593120000019'),
	('201805030454243040000015', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.Wo.cache', '201805021827593120000019'),
	('201805030454243040000016', '缓存处理类名  .java', 'name_cache', 'WoCache', '201805021827593120000019'),
	('201805030454243050000017', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.Wo.vo', '201805021827593120000019'),
	('201805030454243050000018', 'vo类名  .java', 'name_vo', 'WoVO', '201805021827593120000019'),
	('201805030454243050000019', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.Wo', '201805021827593120000019'),
	('201805030454243050000020', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'Wo_A', '201805021827593120000019'),
	('201805030454243050000021', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'Wo', '201805021827593120000019'),
	('201805030454243050000022', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'Wo', '201805021827593120000019'),
	('201805030454243050000023', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'Wo_U', '201805021827593120000019'),
	('201805030454243050000024', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.Wo.js', '201805021827593120000019'),
	('201805030454243050000025', 'js 名称 .js', 'vname_admin_js', 'Wo', '201805021827593120000019'),
	('201805030454243050000026', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.Wo.css', '201805021827593120000019'),
	('201805030454243050000027', 'css 名称 .css', 'vname_admin_css', 'Wo', '201805021827593120000019'),
	('201805030454243050000028', '权限代码', 'power_code', '111', '201805021827593120000019'),
	('201805030454243050000029', '权限代码 添加', 'power_codeA', '${power_code}A', '201805021827593120000019'),
	('201805030454243050000030', '权限代码 删除', 'power_codeD', '${power_code}D', '201805021827593120000019'),
	('201805030454243050000031', '权限代码 查询', 'power_codeS', '${power_code}S', '201805021827593120000019'),
	('201805030454243060000032', '权限代码 修改', 'power_codeU', '${power_code}U', '201805021827593120000019'),
	('201805031058352580000034', 'bean名必定用户输入', 'mybean_mc', '', '201805031056597820000001'),
	('201805031058352580000035', '备注', 'mybean_bz', '', '201805031056597820000001'),
	('201805031058352580000036', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805031056597820000001'),
	('201805031058352580000037', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805031056597820000001'),
	('201805031058352580000038', 'soo名称 .java', 'name_soo', 'TestSoo', '201805031056597820000001'),
	('201805031058352580000039', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805031056597820000001'),
	('201805031058352580000040', 'service名称  .java', 'name_service', 'TestService', '201805031056597820000001'),
	('201805031058352580000041', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.Test', '201805031056597820000001'),
	('201805031058352580000042', 'web入口类-添加操作的类名  .java', 'name_hmA', 'TestADU', '201805031056597820000001'),
	('201805031058352580000043', 'web入口类-删除操作的类名  .java', 'name_hmD', 'TestADU', '201805031056597820000001'),
	('201805031058352580000044', 'web入口类-修改操作的类名  .java', 'name_hmU', 'TestADU', '201805031056597820000001'),
	('201805031058352580000045', 'web入口类-查询操作的类名  .java', 'name_hmS', 'TestS', '201805031056597820000001'),
	('201805031058352580000046', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.Test.validate', '201805031056597820000001'),
	('201805031058352580000047', '校验类名  .java', 'name_validate', 'TestValidate', '201805031056597820000001'),
	('201805031058352580000048', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.Test.cache', '201805031056597820000001'),
	('201805031058352580000049', '缓存处理类名  .java', 'name_cache', 'TestCache', '201805031056597820000001'),
	('201805031058352580000050', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.Test.vo', '201805031056597820000001'),
	('201805031058352590000051', 'vo类名  .java', 'name_vo', 'TestVO', '201805031056597820000001'),
	('201805031058352590000052', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.Test', '201805031056597820000001'),
	('201805031058352590000053', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'Test_A', '201805031056597820000001'),
	('201805031058352590000054', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'Test', '201805031056597820000001'),
	('201805031058352590000055', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'Test', '201805031056597820000001'),
	('201805031058352590000056', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'Test_U', '201805031056597820000001'),
	('201805031058352590000057', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.Test.js', '201805031056597820000001'),
	('201805031058352590000058', 'js 名称 .js', 'vname_admin_js', 'Test', '201805031056597820000001'),
	('201805031058352590000059', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.Test.css', '201805031056597820000001'),
	('201805031058352590000060', 'css 名称 .css', 'vname_admin_css', 'Test', '201805031056597820000001'),
	('201805031058352590000061', '权限代码', 'power_code', '112123', '201805031056597820000001'),
	('201805031058352590000062', '权限代码 添加', 'power_codeA', '112123A', '201805031056597820000001'),
	('201805031058352590000063', '权限代码 删除', 'power_codeD', '112123D', '201805031056597820000001'),
	('201805031058352590000064', '权限代码 查询', 'power_codeS', '112123S', '201805031056597820000001'),
	('201805031058352590000065', '权限代码 修改', 'power_codeU', '112123U', '201805031056597820000001'),
	('201805031058478530000067', 'bean名必定用户输入', 'mybean_mc', '', '201805031058478530000066'),
	('201805031058478540000068', '备注', 'mybean_bz', '', '201805031058478530000066'),
	('201805031058478540000069', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805031058478530000066'),
	('201805031058478540000070', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805031058478530000066'),
	('201805031058478540000071', 'soo名称 .java', 'name_soo', 'Test2Soo', '201805031058478530000066'),
	('201805031058478540000072', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805031058478530000066'),
	('201805031058478540000073', 'service名称  .java', 'name_service', 'Test2Service', '201805031058478530000066'),
	('201805031058478540000074', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.Test2', '201805031058478530000066'),
	('201805031058478540000075', 'web入口类-添加操作的类名  .java', 'name_hmA', 'Test2ADU', '201805031058478530000066'),
	('201805031058478540000076', 'web入口类-删除操作的类名  .java', 'name_hmD', 'Test2ADU', '201805031058478530000066'),
	('201805031058478540000077', 'web入口类-修改操作的类名  .java', 'name_hmU', 'Test2ADU', '201805031058478530000066'),
	('201805031058478540000078', 'web入口类-查询操作的类名  .java', 'name_hmS', 'Test2S', '201805031058478530000066'),
	('201805031058478540000079', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.Test2.validate', '201805031058478530000066'),
	('201805031058478540000080', '校验类名  .java', 'name_validate', 'Test2Validate', '201805031058478530000066'),
	('201805031058478540000081', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.Test2.cache', '201805031058478530000066'),
	('201805031058478540000082', '缓存处理类名  .java', 'name_cache', 'Test2Cache', '201805031058478530000066'),
	('201805031058478540000083', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.Test2.vo', '201805031058478530000066'),
	('201805031058478540000084', 'vo类名  .java', 'name_vo', 'Test2VO', '201805031058478530000066'),
	('201805031058478540000085', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.Test2', '201805031058478530000066'),
	('201805031058478550000086', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'Test2_A', '201805031058478530000066'),
	('201805031058478550000087', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'Test2', '201805031058478530000066'),
	('201805031058478550000088', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'Test2', '201805031058478530000066'),
	('201805031058478550000089', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'Test2_U', '201805031058478530000066'),
	('201805031058478550000090', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.Test2.js', '201805031058478530000066'),
	('201805031058478550000091', 'js 名称 .js', 'vname_admin_js', 'Test2', '201805031058478530000066'),
	('201805031058478550000092', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.Test2.css', '201805031058478530000066'),
	('201805031058478550000093', 'css 名称 .css', 'vname_admin_css', 'Test2', '201805031058478530000066'),
	('201805031058478550000094', '权限代码', 'power_code', '112123', '201805031058478530000066'),
	('201805031058478550000095', '权限代码 添加', 'power_codeA', '112123A', '201805031058478530000066'),
	('201805031058478550000096', '权限代码 删除', 'power_codeD', '112123D', '201805031058478530000066'),
	('201805031058478550000097', '权限代码 查询', 'power_codeS', '112123S', '201805031058478530000066'),
	('201805031058478550000098', '权限代码 修改', 'power_codeU', '112123U', '201805031058478530000066'),
	('201805031059100990000100', 'bean名必定用户输入', 'mybean_mc', '', '201805031059100980000099'),
	('201805031059100990000101', '备注', 'mybean_bz', '', '201805031059100980000099'),
	('201805031059100990000102', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805031059100980000099'),
	('201805031059100990000103', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805031059100980000099'),
	('201805031059100990000104', 'soo名称 .java', 'name_soo', 'Test21Soo', '201805031059100980000099'),
	('201805031059100990000105', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805031059100980000099'),
	('201805031059100990000106', 'service名称  .java', 'name_service', 'Test21Service', '201805031059100980000099'),
	('201805031059100990000107', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.Test21', '201805031059100980000099'),
	('201805031059100990000108', 'web入口类-添加操作的类名  .java', 'name_hmA', 'Test21ADU', '201805031059100980000099'),
	('201805031059100990000109', 'web入口类-删除操作的类名  .java', 'name_hmD', 'Test21ADU', '201805031059100980000099'),
	('201805031059100990000110', 'web入口类-修改操作的类名  .java', 'name_hmU', 'Test21ADU', '201805031059100980000099'),
	('201805031059100990000111', 'web入口类-查询操作的类名  .java', 'name_hmS', 'Test21S', '201805031059100980000099'),
	('201805031059100990000112', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.Test21.validate', '201805031059100980000099'),
	('201805031059100990000113', '校验类名  .java', 'name_validate', 'Test21Validate', '201805031059100980000099'),
	('201805031059100990000114', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.Test21.cache', '201805031059100980000099'),
	('201805031059100990000115', '缓存处理类名  .java', 'name_cache', 'Test21Cache', '201805031059100980000099'),
	('201805031059100990000116', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.Test21.vo', '201805031059100980000099'),
	('201805031059100990000117', 'vo类名  .java', 'name_vo', 'Test21VO', '201805031059100980000099'),
	('201805031059100990000118', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.Test21', '201805031059100980000099'),
	('201805031059100990000119', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'Test21_A', '201805031059100980000099'),
	('201805031059100990000120', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'Test21', '201805031059100980000099'),
	('201805031059100990000121', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'Test21', '201805031059100980000099'),
	('201805031059100990000122', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'Test21_U', '201805031059100980000099'),
	('201805031059100990000123', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.Test21.js', '201805031059100980000099'),
	('201805031059100990000124', 'js 名称 .js', 'vname_admin_js', 'Test21', '201805031059100980000099'),
	('201805031059100990000125', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.Test21.css', '201805031059100980000099'),
	('201805031059100990000126', 'css 名称 .css', 'vname_admin_css', 'Test21', '201805031059100980000099'),
	('201805031059100990000127', '权限代码', 'power_code', '112123', '201805031059100980000099'),
	('201805031059100990000128', '权限代码 添加', 'power_codeA', '112123A', '201805031059100980000099'),
	('201805031059100990000129', '权限代码 删除', 'power_codeD', '112123D', '201805031059100980000099'),
	('201805031059100990000130', '权限代码 查询', 'power_codeS', '112123S', '201805031059100980000099'),
	('201805031059100990000131', '权限代码 修改', 'power_codeU', '112123U', '201805031059100980000099'),
	('201805031105530880000002', 'bean名必定用户输入', 'mybean_mc', '', '201805031105530870000001'),
	('201805031105530880000003', '备注', 'mybean_bz', '', '201805031105530870000001'),
	('201805031105530880000004', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805031105530870000001'),
	('201805031105530880000005', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805031105530870000001'),
	('201805031105530880000006', 'soo名称 .java', 'name_soo', 'qewqeSoo', '201805031105530870000001'),
	('201805031105530880000007', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805031105530870000001'),
	('201805031105530880000008', 'service名称  .java', 'name_service', 'qewqeService', '201805031105530870000001'),
	('201805031105530880000009', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.qewqe', '201805031105530870000001'),
	('201805031105530880000010', 'web入口类-添加操作的类名  .java', 'name_hmA', 'qewqeADU', '201805031105530870000001'),
	('201805031105530880000011', 'web入口类-删除操作的类名  .java', 'name_hmD', 'qewqeADU', '201805031105530870000001'),
	('201805031105530880000012', 'web入口类-修改操作的类名  .java', 'name_hmU', 'qewqeADU', '201805031105530870000001'),
	('201805031105530880000013', 'web入口类-查询操作的类名  .java', 'name_hmS', 'qewqeS', '201805031105530870000001'),
	('201805031105530880000014', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.qewqe.validate', '201805031105530870000001'),
	('201805031105530890000015', '校验类名  .java', 'name_validate', 'qewqeValidate', '201805031105530870000001'),
	('201805031105530890000016', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.qewqe.cache', '201805031105530870000001'),
	('201805031105530890000017', '缓存处理类名  .java', 'name_cache', 'qewqeCache', '201805031105530870000001'),
	('201805031105530890000018', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.qewqe.vo', '201805031105530870000001'),
	('201805031105530890000019', 'vo类名  .java', 'name_vo', 'qewqeVO', '201805031105530870000001'),
	('201805031105530890000020', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.qewqe', '201805031105530870000001'),
	('201805031105530890000021', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'qewqe_A', '201805031105530870000001'),
	('201805031105530890000022', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'qewqe', '201805031105530870000001'),
	('201805031105530890000023', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'qewqe', '201805031105530870000001'),
	('201805031105530890000024', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'qewqe_U', '201805031105530870000001'),
	('201805031105530890000025', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.qewqe.js', '201805031105530870000001'),
	('201805031105530890000026', 'js 名称 .js', 'vname_admin_js', 'qewqe', '201805031105530870000001'),
	('201805031105530890000027', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.qewqe.css', '201805031105530870000001'),
	('201805031105530890000028', 'css 名称 .css', 'vname_admin_css', 'qewqe', '201805031105530870000001'),
	('201805031105530890000029', '权限代码', 'power_code', '', '201805031105530870000001'),
	('201805031105530890000030', '权限代码 添加', 'power_codeA', '[?p?]A', '201805031105530870000001'),
	('201805031105530890000031', '权限代码 删除', 'power_codeD', '[?p?]D', '201805031105530870000001'),
	('201805031105530900000032', '权限代码 查询', 'power_codeS', '[?p?]S', '201805031105530870000001'),
	('201805031105530900000033', '权限代码 修改', 'power_codeU', '[?p?]U', '201805031105530870000001'),
	('201805031122243570000002', '备注', 'mybean_bz', '', '201805031122243570000001'),
	('201805031122243570000003', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805031122243570000001'),
	('201805031122243570000004', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805031122243570000001'),
	('201805031122243570000005', 'soo名称 .java', 'name_soo', 'werwSoo', '201805031122243570000001'),
	('201805031122243570000006', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805031122243570000001'),
	('201805031122243570000007', 'service名称  .java', 'name_service', 'werwService', '201805031122243570000001'),
	('201805031122243570000008', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.werw', '201805031122243570000001'),
	('201805031122243570000009', 'web入口类-添加操作的类名  .java', 'name_hmA', 'werwADU', '201805031122243570000001'),
	('201805031122243570000010', 'web入口类-删除操作的类名  .java', 'name_hmD', 'werwADU', '201805031122243570000001'),
	('201805031122243570000011', 'web入口类-修改操作的类名  .java', 'name_hmU', 'werwADU', '201805031122243570000001'),
	('201805031122243570000012', 'web入口类-查询操作的类名  .java', 'name_hmS', 'werwS', '201805031122243570000001'),
	('201805031122243570000013', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.werw.validate', '201805031122243570000001'),
	('201805031122243570000014', '校验类名  .java', 'name_validate', 'werwValidate', '201805031122243570000001'),
	('201805031122243570000015', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.werw.cache', '201805031122243570000001'),
	('201805031122243570000016', '缓存处理类名  .java', 'name_cache', 'werwCache', '201805031122243570000001'),
	('201805031122243570000017', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.werw.vo', '201805031122243570000001'),
	('201805031122243570000018', 'vo类名  .java', 'name_vo', 'werwVO', '201805031122243570000001'),
	('201805031122243570000019', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.werw', '201805031122243570000001'),
	('201805031122243570000020', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'werw_A', '201805031122243570000001'),
	('201805031122243570000021', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'werw', '201805031122243570000001'),
	('201805031122243570000022', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'werw', '201805031122243570000001'),
	('201805031122243570000023', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'werw_U', '201805031122243570000001'),
	('201805031122243570000024', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.werw.js', '201805031122243570000001'),
	('201805031122243570000025', 'js 名称 .js', 'vname_admin_js', 'werw', '201805031122243570000001'),
	('201805031122243570000026', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.werw.css', '201805031122243570000001'),
	('201805031122243570000027', 'css 名称 .css', 'vname_admin_css', 'werw', '201805031122243570000001'),
	('201805031122243570000028', '权限代码', 'power_code', '', '201805031122243570000001'),
	('201805031122243570000029', '权限代码 添加', 'power_codeA', '[?p?]A', '201805031122243570000001'),
	('201805031122243570000030', '权限代码 删除', 'power_codeD', '[?p?]D', '201805031122243570000001'),
	('201805031122243570000031', '权限代码 查询', 'power_codeS', '[?p?]S', '201805031122243570000001'),
	('201805031122243570000032', '权限代码 修改', 'power_codeU', '[?p?]U', '201805031122243570000001'),
	('201805031124575710000033', '备注', 'mybean_bz', 'hghg', '201805031123565130000001'),
	('201805031124575710000034', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805031123565130000001'),
	('201805031124575710000035', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805031123565130000001'),
	('201805031124575710000036', 'soo名称 .java', 'name_soo', 'werw1Soo', '201805031123565130000001'),
	('201805031124575710000037', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805031123565130000001'),
	('201805031124575710000038', 'service名称  .java', 'name_service', 'werw1Service', '201805031123565130000001'),
	('201805031124575710000039', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.werw1', '201805031123565130000001'),
	('201805031124575720000040', 'web入口类-添加操作的类名  .java', 'name_hmA', 'werw1ADU', '201805031123565130000001'),
	('201805031124575720000041', 'web入口类-删除操作的类名  .java', 'name_hmD', 'werw1ADU', '201805031123565130000001'),
	('201805031124575720000042', 'web入口类-修改操作的类名  .java', 'name_hmU', 'werw1ADU', '201805031123565130000001'),
	('201805031124575720000043', 'web入口类-查询操作的类名  .java', 'name_hmS', 'werw1S', '201805031123565130000001'),
	('201805031124575720000044', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.werw1.validate', '201805031123565130000001'),
	('201805031124575720000045', '校验类名  .java', 'name_validate', 'werw1Validate', '201805031123565130000001'),
	('201805031124575720000046', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.werw1.cache', '201805031123565130000001'),
	('201805031124575720000047', '缓存处理类名  .java', 'name_cache', 'werw1Cache', '201805031123565130000001'),
	('201805031124575720000048', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.werw1.vo', '201805031123565130000001'),
	('201805031124575720000049', 'vo类名  .java', 'name_vo', 'werw1VO', '201805031123565130000001'),
	('201805031124575720000050', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.werw1', '201805031123565130000001'),
	('201805031124575720000051', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'werw1_A', '201805031123565130000001'),
	('201805031124575720000052', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'werw1', '201805031123565130000001'),
	('201805031124575720000053', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'werw1', '201805031123565130000001'),
	('201805031124575730000054', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'werw1_U', '201805031123565130000001'),
	('201805031124575730000055', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.werw1.js', '201805031123565130000001'),
	('201805031124575730000056', 'js 名称 .js', 'vname_admin_js', 'werw1', '201805031123565130000001'),
	('201805031124575730000057', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.werw1.css', '201805031123565130000001'),
	('201805031124575730000058', 'css 名称 .css', 'vname_admin_css', 'werw1', '201805031123565130000001'),
	('201805031124575730000059', '权限代码', 'power_code', 'Y101.11.1', '201805031123565130000001'),
	('201805031124575730000060', '权限代码 添加', 'power_codeA', 'Y101.11.1A', '201805031123565130000001'),
	('201805031124575730000061', '权限代码 删除', 'power_codeD', 'Y101.11.1D', '201805031123565130000001'),
	('201805031124575730000062', '权限代码 查询', 'power_codeS', 'Y101.11.1S', '201805031123565130000001'),
	('201805031124575730000063', '权限代码 修改', 'power_codeU', 'Y101.11.1U', '201805031123565130000001'),
	('201805031125179380000065', '备注', 'mybean_bz', '', '201805031125179380000064'),
	('201805031125179380000066', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805031125179380000064'),
	('201805031125179380000067', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805031125179380000064'),
	('201805031125179380000068', 'soo名称 .java', 'name_soo', 'WerwqSoo', '201805031125179380000064'),
	('201805031125179380000069', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805031125179380000064'),
	('201805031125179380000070', 'service名称  .java', 'name_service', 'WerwqService', '201805031125179380000064'),
	('201805031125179380000071', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.Werwq', '201805031125179380000064'),
	('201805031125179380000072', 'web入口类-添加操作的类名  .java', 'name_hmA', 'WerwqADU', '201805031125179380000064'),
	('201805031125179380000073', 'web入口类-删除操作的类名  .java', 'name_hmD', 'WerwqADU', '201805031125179380000064'),
	('201805031125179380000074', 'web入口类-修改操作的类名  .java', 'name_hmU', 'WerwqADU', '201805031125179380000064'),
	('201805031125179380000075', 'web入口类-查询操作的类名  .java', 'name_hmS', 'WerwqS', '201805031125179380000064'),
	('201805031125179380000076', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.Werwq.validate', '201805031125179380000064'),
	('201805031125179380000077', '校验类名  .java', 'name_validate', 'WerwqValidate', '201805031125179380000064'),
	('201805031125179380000078', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.Werwq.cache', '201805031125179380000064'),
	('201805031125179380000079', '缓存处理类名  .java', 'name_cache', 'WerwqCache', '201805031125179380000064'),
	('201805031125179380000080', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.Werwq.vo', '201805031125179380000064'),
	('201805031125179380000081', 'vo类名  .java', 'name_vo', 'WerwqVO', '201805031125179380000064'),
	('201805031125179380000082', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.Werwq', '201805031125179380000064'),
	('201805031125179380000083', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'Werwq_A', '201805031125179380000064'),
	('201805031125179380000084', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'Werwq', '201805031125179380000064'),
	('201805031125179380000085', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'Werwq', '201805031125179380000064'),
	('201805031125179380000086', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'Werwq_U', '201805031125179380000064'),
	('201805031125179380000087', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.Werwq.js', '201805031125179380000064'),
	('201805031125179380000088', 'js 名称 .js', 'vname_admin_js', 'Werwq', '201805031125179380000064'),
	('201805031125179380000089', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.Werwq.css', '201805031125179380000064'),
	('201805031125179380000090', 'css 名称 .css', 'vname_admin_css', 'Werwq', '201805031125179380000064'),
	('201805031125179380000091', '权限代码', 'power_code', 'Y101.11.1', '201805031125179380000064'),
	('201805031125179380000092', '权限代码 添加', 'power_codeA', 'Y101.11.1A', '201805031125179380000064'),
	('201805031125179380000093', '权限代码 删除', 'power_codeD', 'Y101.11.1D', '201805031125179380000064'),
	('201805031125179380000094', '权限代码 查询', 'power_codeS', 'Y101.11.1S', '201805031125179380000064'),
	('201805031125179380000095', '权限代码 修改', 'power_codeU', 'Y101.11.1U', '201805031125179380000064'),
	('201805031128087440000002', '备注', 'mybean_bz', '', '201805031128087440000001'),
	('201805031128087440000003', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805031128087440000001'),
	('201805031128087440000004', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805031128087440000001'),
	('201805031128087440000005', 'soo名称 .java', 'name_soo', 'Werwq3Soo', '201805031128087440000001'),
	('201805031128087440000006', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805031128087440000001'),
	('201805031128087440000007', 'service名称  .java', 'name_service', 'Werwq3Service', '201805031128087440000001'),
	('201805031128087440000008', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.Werwq3', '201805031128087440000001'),
	('201805031128087440000009', 'web入口类-添加操作的类名  .java', 'name_hmA', 'Werwq3ADU', '201805031128087440000001'),
	('201805031128087440000010', 'web入口类-删除操作的类名  .java', 'name_hmD', 'Werwq3ADU', '201805031128087440000001'),
	('201805031128087440000011', 'web入口类-修改操作的类名  .java', 'name_hmU', 'Werwq3ADU', '201805031128087440000001'),
	('201805031128087440000012', 'web入口类-查询操作的类名  .java', 'name_hmS', 'Werwq3S', '201805031128087440000001'),
	('201805031128087440000013', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.Werwq3.validate', '201805031128087440000001'),
	('201805031128087440000014', '校验类名  .java', 'name_validate', 'Werwq3Validate', '201805031128087440000001'),
	('201805031128087440000015', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.Werwq3.cache', '201805031128087440000001'),
	('201805031128087440000016', '缓存处理类名  .java', 'name_cache', 'Werwq3Cache', '201805031128087440000001'),
	('201805031128087440000017', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.Werwq3.vo', '201805031128087440000001'),
	('201805031128087440000018', 'vo类名  .java', 'name_vo', 'Werwq3VO', '201805031128087440000001'),
	('201805031128087440000019', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.Werwq3', '201805031128087440000001'),
	('201805031128087440000020', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'Werwq3_A', '201805031128087440000001'),
	('201805031128087540000021', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'Werwq3', '201805031128087440000001'),
	('201805031128087540000022', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'Werwq3', '201805031128087440000001'),
	('201805031128087540000023', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'Werwq3_U', '201805031128087440000001'),
	('201805031128087540000024', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.Werwq3.js', '201805031128087440000001'),
	('201805031128087540000025', 'js 名称 .js', 'vname_admin_js', 'Werwq3', '201805031128087440000001'),
	('201805031128087540000026', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.Werwq3.css', '201805031128087440000001'),
	('201805031128087540000027', 'css 名称 .css', 'vname_admin_css', 'Werwq3', '201805031128087440000001'),
	('201805031128087540000028', '权限代码', 'power_code', 'Y101.11.1', '201805031128087440000001'),
	('201805031128087540000029', '权限代码 添加', 'power_codeA', 'Y101.11.1A', '201805031128087440000001'),
	('201805031128087540000030', '权限代码 删除', 'power_codeD', 'Y101.11.1D', '201805031128087440000001'),
	('201805031128087540000031', '权限代码 查询', 'power_codeS', 'Y101.11.1S', '201805031128087440000001'),
	('201805031128087540000032', '权限代码 修改', 'power_codeU', 'Y101.11.1U', '201805031128087440000001'),
	('201805031129477660000002', '备注', 'mybean_bz', '', '201805031129477660000001'),
	('201805031129477660000003', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805031129477660000001'),
	('201805031129477660000004', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805031129477660000001'),
	('201805031129477660000005', 'soo名称 .java', 'name_soo', 'Werwq4Soo', '201805031129477660000001'),
	('201805031129477660000006', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805031129477660000001'),
	('201805031129477660000007', 'service名称  .java', 'name_service', 'Werwq4Service', '201805031129477660000001'),
	('201805031129477660000008', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.Werwq4', '201805031129477660000001'),
	('201805031129477660000009', 'web入口类-添加操作的类名  .java', 'name_hmA', 'Werwq4ADU', '201805031129477660000001'),
	('201805031129477660000010', 'web入口类-删除操作的类名  .java', 'name_hmD', 'Werwq4ADU', '201805031129477660000001'),
	('201805031129477660000011', 'web入口类-修改操作的类名  .java', 'name_hmU', 'Werwq4ADU', '201805031129477660000001'),
	('201805031129477660000012', 'web入口类-查询操作的类名  .java', 'name_hmS', 'Werwq4S', '201805031129477660000001'),
	('201805031129477660000013', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.Werwq4.validate', '201805031129477660000001'),
	('201805031129477660000014', '校验类名  .java', 'name_validate', 'Werwq4Validate', '201805031129477660000001'),
	('201805031129477660000015', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.Werwq4.cache', '201805031129477660000001'),
	('201805031129477660000016', '缓存处理类名  .java', 'name_cache', 'Werwq4Cache', '201805031129477660000001'),
	('201805031129477660000017', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.Werwq4.vo', '201805031129477660000001'),
	('201805031129477660000018', 'vo类名  .java', 'name_vo', 'Werwq4VO', '201805031129477660000001'),
	('201805031129477660000019', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.Werwq4', '201805031129477660000001'),
	('201805031129477660000020', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'Werwq4_A', '201805031129477660000001'),
	('201805031129477660000021', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'Werwq4', '201805031129477660000001'),
	('201805031129477660000022', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'Werwq4', '201805031129477660000001'),
	('201805031129477660000023', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'Werwq4_U', '201805031129477660000001'),
	('201805031129477660000024', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.Werwq4.js', '201805031129477660000001'),
	('201805031129477660000025', 'js 名称 .js', 'vname_admin_js', 'Werwq4', '201805031129477660000001'),
	('201805031129477660000026', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.Werwq4.css', '201805031129477660000001'),
	('201805031129477660000027', 'css 名称 .css', 'vname_admin_css', 'Werwq4', '201805031129477660000001'),
	('201805031129477660000028', '权限代码', 'power_code', 'Y101.11.1', '201805031129477660000001'),
	('201805031129477660000029', '权限代码 添加', 'power_codeA', 'Y101.11.1A', '201805031129477660000001'),
	('201805031129477660000030', '权限代码 删除', 'power_codeD', 'Y101.11.1D', '201805031129477660000001'),
	('201805031129477660000031', '权限代码 查询', 'power_codeS', 'Y101.11.1S', '201805031129477660000001'),
	('201805031129477660000032', '权限代码 修改', 'power_codeU', 'Y101.11.1U', '201805031129477660000001'),
	('201805031131403080000002', '备注', 'mybean_bz', '', '201805031131403080000001'),
	('201805031131403080000003', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805031131403080000001'),
	('201805031131403080000004', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805031131403080000001'),
	('201805031131403080000005', 'soo名称 .java', 'name_soo', 'Werwq5Soo', '201805031131403080000001'),
	('201805031131403080000006', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805031131403080000001'),
	('201805031131403080000007', 'service名称  .java', 'name_service', 'Werwq5Service', '201805031131403080000001'),
	('201805031131403080000008', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.Werwq5', '201805031131403080000001'),
	('201805031131403080000009', 'web入口类-添加操作的类名  .java', 'name_hmA', 'Werwq5ADU', '201805031131403080000001'),
	('201805031131403080000010', 'web入口类-删除操作的类名  .java', 'name_hmD', 'Werwq5ADU', '201805031131403080000001'),
	('201805031131403080000011', 'web入口类-修改操作的类名  .java', 'name_hmU', 'Werwq5ADU', '201805031131403080000001'),
	('201805031131403080000012', 'web入口类-查询操作的类名  .java', 'name_hmS', 'Werwq5S', '201805031131403080000001'),
	('201805031131403080000013', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.Werwq5.validate', '201805031131403080000001'),
	('201805031131403080000014', '校验类名  .java', 'name_validate', 'Werwq5Validate', '201805031131403080000001'),
	('201805031131403080000015', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.Werwq5.cache', '201805031131403080000001'),
	('201805031131403080000016', '缓存处理类名  .java', 'name_cache', 'Werwq5Cache', '201805031131403080000001'),
	('201805031131403080000017', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.Werwq5.vo', '201805031131403080000001'),
	('201805031131403080000018', 'vo类名  .java', 'name_vo', 'Werwq5VO', '201805031131403080000001'),
	('201805031131403080000019', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.Werwq5', '201805031131403080000001'),
	('201805031131403080000020', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'Werwq5_A', '201805031131403080000001'),
	('201805031131403080000021', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'Werwq5', '201805031131403080000001'),
	('201805031131403080000022', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'Werwq5', '201805031131403080000001'),
	('201805031131403080000023', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'Werwq5_U', '201805031131403080000001'),
	('201805031131403080000024', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.Werwq5.js', '201805031131403080000001'),
	('201805031131403080000025', 'js 名称 .js', 'vname_admin_js', 'Werwq5', '201805031131403080000001'),
	('201805031131403080000026', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.Werwq5.css', '201805031131403080000001'),
	('201805031131403080000027', 'css 名称 .css', 'vname_admin_css', 'Werwq5', '201805031131403080000001'),
	('201805031131403080000028', '权限代码', 'power_code', 'Y101.11.1', '201805031131403080000001'),
	('201805031131403080000029', '权限代码 添加', 'power_codeA', 'Y101.11.1A', '201805031131403080000001'),
	('201805031131403080000030', '权限代码 删除', 'power_codeD', 'Y101.11.1D', '201805031131403080000001'),
	('201805031131403080000031', '权限代码 查询', 'power_codeS', 'Y101.11.1S', '201805031131403080000001'),
	('201805031131403080000032', '权限代码 修改', 'power_codeU', 'Y101.11.1U', '201805031131403080000001'),
	('201805031133587860000002', '备注', 'mybean_bz', '', '201805031133587760000001'),
	('201805031133587860000003', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805031133587760000001'),
	('201805031133587860000004', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805031133587760000001'),
	('201805031133587860000005', 'soo名称 .java', 'name_soo', 'werwq6Soo', '201805031133587760000001'),
	('201805031133587860000006', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805031133587760000001'),
	('201805031133587860000007', 'service名称  .java', 'name_service', 'werwq6Service', '201805031133587760000001'),
	('201805031133587860000008', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.werwq6', '201805031133587760000001'),
	('201805031133587860000009', 'web入口类-添加操作的类名  .java', 'name_hmA', 'werwq6ADU', '201805031133587760000001'),
	('201805031133587860000010', 'web入口类-删除操作的类名  .java', 'name_hmD', 'werwq6ADU', '201805031133587760000001'),
	('201805031133587860000011', 'web入口类-修改操作的类名  .java', 'name_hmU', 'werwq6ADU', '201805031133587760000001'),
	('201805031133587860000012', 'web入口类-查询操作的类名  .java', 'name_hmS', 'werwq6S', '201805031133587760000001'),
	('201805031133587860000013', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.werwq6.validate', '201805031133587760000001'),
	('201805031133587860000014', '校验类名  .java', 'name_validate', 'werwq6Validate', '201805031133587760000001'),
	('201805031133587860000015', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.werwq6.cache', '201805031133587760000001'),
	('201805031133587860000016', '缓存处理类名  .java', 'name_cache', 'werwq6Cache', '201805031133587760000001'),
	('201805031133587860000017', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.werwq6.vo', '201805031133587760000001'),
	('201805031133587860000018', 'vo类名  .java', 'name_vo', 'werwq6VO', '201805031133587760000001'),
	('201805031133587860000019', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.werwq6', '201805031133587760000001'),
	('201805031133587860000020', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'werwq6_A', '201805031133587760000001'),
	('201805031133587860000021', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'werwq6', '201805031133587760000001'),
	('201805031133587860000022', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'werwq6', '201805031133587760000001'),
	('201805031133587860000023', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'werwq6_U', '201805031133587760000001'),
	('201805031133587860000024', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.werwq6.js', '201805031133587760000001'),
	('201805031133587860000025', 'js 名称 .js', 'vname_admin_js', 'werwq6', '201805031133587760000001'),
	('201805031133587860000026', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.werwq6.css', '201805031133587760000001'),
	('201805031133587860000027', 'css 名称 .css', 'vname_admin_css', 'werwq6', '201805031133587760000001'),
	('201805031133587860000028', '权限代码', 'power_code', 'Y101.11.1', '201805031133587760000001'),
	('201805031133587860000029', '权限代码 添加', 'power_codeA', 'Y101.11.1A', '201805031133587760000001'),
	('201805031133587860000030', '权限代码 删除', 'power_codeD', 'Y101.11.1D', '201805031133587760000001'),
	('201805031133587860000031', '权限代码 查询', 'power_codeS', 'Y101.11.1S', '201805031133587760000001'),
	('201805031133587860000032', '权限代码 修改', 'power_codeU', 'Y101.11.1U', '201805031133587760000001'),
	('201805031136441190000064', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805031136441180000063'),
	('201805031136441190000065', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805031136441180000063'),
	('201805031136441190000066', 'soo名称 .java', 'name_soo', 'Werwq7Soo', '201805031136441180000063'),
	('201805031136441190000067', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805031136441180000063'),
	('201805031136441190000068', 'service名称  .java', 'name_service', 'Werwq7Service', '201805031136441180000063'),
	('201805031136441190000069', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.werwq7', '201805031136441180000063'),
	('201805031136441190000070', 'web入口类-添加操作的类名  .java', 'name_hmA', 'Werwq7ADU', '201805031136441180000063'),
	('201805031136441190000071', 'web入口类-删除操作的类名  .java', 'name_hmD', 'Werwq7ADU', '201805031136441180000063'),
	('201805031136441190000072', 'web入口类-修改操作的类名  .java', 'name_hmU', 'Werwq7ADU', '201805031136441180000063'),
	('201805031136441190000073', 'web入口类-查询操作的类名  .java', 'name_hmS', 'werwq7S', '201805031136441180000063'),
	('201805031136441190000074', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.werwq7.validate', '201805031136441180000063'),
	('201805031136441190000075', '校验类名  .java', 'name_validate', 'Werwq7Validate', '201805031136441180000063'),
	('201805031136441190000076', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.werwq7.cache', '201805031136441180000063'),
	('201805031136441190000077', '缓存处理类名  .java', 'name_cache', 'Werwq7Cache', '201805031136441180000063'),
	('201805031136441190000078', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.werwq7.vo', '201805031136441180000063'),
	('201805031136441190000079', 'vo类名  .java', 'name_vo', 'Werwq7VO', '201805031136441180000063'),
	('201805031136441190000080', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.werwq7', '201805031136441180000063'),
	('201805031136441190000081', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'werwq7_A', '201805031136441180000063'),
	('201805031136441190000082', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'werwq7', '201805031136441180000063'),
	('201805031136441190000083', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'werwq7', '201805031136441180000063'),
	('201805031136441190000084', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'werwq7_U', '201805031136441180000063'),
	('201805031136441190000085', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.werwq7.js', '201805031136441180000063'),
	('201805031136441190000086', 'js 名称 .js', 'vname_admin_js', 'werwq7', '201805031136441180000063'),
	('201805031136441190000087', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.werwq7.css', '201805031136441180000063'),
	('201805031136441190000088', 'css 名称 .css', 'vname_admin_css', 'werwq7', '201805031136441180000063'),
	('201805031136441190000089', '权限代码', 'power_code', '322323', '201805031136441180000063'),
	('201805031136441200000090', '权限代码 添加', 'power_codeA', '322323A', '201805031136441180000063'),
	('201805031136441200000091', '权限代码 删除', 'power_codeD', '322323D', '201805031136441180000063'),
	('201805031136441200000092', '权限代码 查询', 'power_codeS', '322323S', '201805031136441180000063'),
	('201805031136441200000093', '权限代码 修改', 'power_codeU', '322323U', '201805031136441180000063'),
	('201805031501090060000002', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805031501090050000001'),
	('201805031501090060000003', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805031501090050000001'),
	('201805031501090060000004', 'soo名称 .java', 'name_soo', 'GGSoo', '201805031501090050000001'),
	('201805031501090070000005', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805031501090050000001'),
	('201805031501090070000006', 'service名称  .java', 'name_service', 'GGService', '201805031501090050000001'),
	('201805031501090070000007', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.gg', '201805031501090050000001'),
	('201805031501090070000008', 'web入口类-添加操作的类名  .java', 'name_hmA', 'GGADU', '201805031501090050000001'),
	('201805031501090070000009', 'web入口类-删除操作的类名  .java', 'name_hmD', 'GGADU', '201805031501090050000001'),
	('201805031501090070000010', 'web入口类-修改操作的类名  .java', 'name_hmU', 'GGADU', '201805031501090050000001'),
	('201805031501090070000011', 'web入口类-查询操作的类名  .java', 'name_hmS', 'ggS', '201805031501090050000001'),
	('201805031501090070000012', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.gg.validate', '201805031501090050000001'),
	('201805031501090070000013', '校验类名  .java', 'name_validate', 'GGValidate', '201805031501090050000001'),
	('201805031501090070000014', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.gg.cache', '201805031501090050000001'),
	('201805031501090070000015', '缓存处理类名  .java', 'name_cache', 'GGCache', '201805031501090050000001'),
	('201805031501090070000016', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.gg.vo', '201805031501090050000001'),
	('201805031501090070000017', 'vo类名  .java', 'name_vo', 'GGVO', '201805031501090050000001'),
	('201805031501090070000018', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.gg', '201805031501090050000001'),
	('201805031501090070000019', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'gg_A', '201805031501090050000001'),
	('201805031501090070000020', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'gg', '201805031501090050000001'),
	('201805031501090070000021', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'gg', '201805031501090050000001'),
	('201805031501090070000022', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'gg_U', '201805031501090050000001'),
	('201805031501090070000023', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.gg.js', '201805031501090050000001'),
	('201805031501090070000024', 'js 名称 .js', 'vname_admin_js', 'gg', '201805031501090050000001'),
	('201805031501090070000025', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.gg.css', '201805031501090050000001'),
	('201805031501090070000026', 'css 名称 .css', 'vname_admin_css', 'gg', '201805031501090050000001'),
	('201805031501090080000027', '权限代码', 'power_code', '', '201805031501090050000001'),
	('201805031501090080000028', '权限代码 添加', 'power_codeA', 'A', '201805031501090050000001'),
	('201805031501090080000029', '权限代码 删除', 'power_codeD', 'D', '201805031501090050000001'),
	('201805031501090080000030', '权限代码 查询', 'power_codeS', 'S', '201805031501090050000001'),
	('201805031501090080000031', '权限代码 修改', 'power_codeU', 'U', '201805031501090050000001'),
	('201805040845033570000003', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201805040845033570000002'),
	('201805040845033570000004', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201805040845033570000002'),
	('201805040845033570000005', 'soo名称 .java', 'name_soo', 'MybeanSoo', '201805040845033570000002'),
	('201805040845033570000006', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201805040845033570000002'),
	('201805040845033570000007', 'service名称  .java', 'name_service', 'MybeanService', '201805040845033570000002'),
	('201805040845033570000008', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.mybean', '201805040845033570000002'),
	('201805040845033570000009', 'web入口类-添加操作的类名  .java', 'name_hmA', 'MybeanADU', '201805040845033570000002'),
	('201805040845033570000010', 'web入口类-删除操作的类名  .java', 'name_hmD', 'MybeanADU', '201805040845033570000002'),
	('201805040845033570000011', 'web入口类-修改操作的类名  .java', 'name_hmU', 'MybeanADU', '201805040845033570000002'),
	('201805040845033570000012', 'web入口类-查询操作的类名  .java', 'name_hmS', 'mybeanS', '201805040845033570000002'),
	('201805040845033580000013', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.mybean.validate', '201805040845033570000002'),
	('201805040845033580000014', '校验类名  .java', 'name_validate', 'MybeanValidate', '201805040845033570000002'),
	('201805040845033580000015', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.mybean.cache', '201805040845033570000002'),
	('201805040845033580000016', '缓存处理类名  .java', 'name_cache', 'MybeanCache', '201805040845033570000002'),
	('201805040845033580000017', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.mybean.vo', '201805040845033570000002'),
	('201805040845033580000018', 'vo类名  .java', 'name_vo', 'MybeanVO', '201805040845033570000002'),
	('201805040845033580000019', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.mybean', '201805040845033570000002'),
	('201805040845033580000020', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', 'mybean_A', '201805040845033570000002'),
	('201805040845033580000021', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', 'mybean', '201805040845033570000002'),
	('201805040845033580000022', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', 'mybean', '201805040845033570000002'),
	('201805040845033580000023', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', 'mybean_U', '201805040845033570000002'),
	('201805040845033580000024', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.mybean.js', '201805040845033570000002'),
	('201805040845033580000025', 'js 名称 .js', 'vname_admin_js', 'mybean', '201805040845033570000002'),
	('201805040845033580000026', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.mybean.css', '201805040845033570000002'),
	('201805040845033580000027', 'css 名称 .css', 'vname_admin_css', 'mybean', '201805040845033570000002'),
	('201805040845033580000028', '权限代码', 'power_code', '111111111', '201805040845033570000002'),
	('201805040845033580000029', '权限代码 添加', 'power_codeA', '111111111A', '201805040845033570000002'),
	('201805040845033580000030', '权限代码 删除', 'power_codeD', '111111111D', '201805040845033570000002'),
	('201805040845033580000031', '权限代码 查询', 'power_codeS', '111111111S', '201805040845033570000002'),
	('201805040845033580000032', '权限代码 修改', 'power_codeU', '111111111U', '201805040845033570000002');
/*!40000 ALTER TABLE `Bean2` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `BM` (
  `bm_id` char(24) NOT NULL,
  `bm_pid` char(24) NOT NULL,
  `bm_name` char(50) NOT NULL,
  PRIMARY KEY (`bm_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `BM` DISABLE KEYS */;
INSERT INTO `BM` (`bm_id`, `bm_pid`, `bm_name`) VALUES
	('201708161038567800000003', '0', '小汪科技工作室'),
	('201708161039129690000004', '201708161038567800000003', '总经办');
/*!40000 ALTER TABLE `BM` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `CModel` (
  `cmodel_zj` char(24) NOT NULL,
  `cmodel_mc` varchar(50) NOT NULL,
  `cmodel_nr` text NOT NULL,
  `cmodelfl_id` char(24) NOT NULL,
  `cmodelfl_name` varchar(50) NOT NULL,
  PRIMARY KEY (`cmodel_zj`),
  KEY `cmodelfl_id` (`cmodelfl_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `CModel` DISABLE KEYS */;
INSERT INTO `CModel` (`cmodel_zj`, `cmodel_mc`, `cmodel_nr`, `cmodelfl_id`, `cmodelfl_name`) VALUES
	('201804090200112700000001', 'js getAndSet', '    function get${bean.mybean_mc}FormData() {\n        var data = {};\n\n#foreach($field in $fields)\n        data.${field.c_mc}= $(&#39;#${field.c_mc}&#39;).val()\n#end\n        return data;\n    }\n\n    function setCModelFormData() {\n#foreach($field in $fields)\n        $(&#39;#${field.c_mc}&#39;).val(&#39;&#39;)\n#end\n    }', '201804071854001710000013', '公共碎片'),
	('201804130342266070000024', 'JWeb_Bean', 'package ${package_bean};\n//${power_codeU}\n@system.base.annotation.Table\npublic class ${bean.bean_mc} {\n\n#foreach($field in $fields)\n #if($field.t_sy==&#39;zj&#39;)\n    @system.base.annotation.ID\n #elseif($field.c_lx==&#39;Date&#39;)\n    @system.base.annotation.Time(&#34;$field.mybeanfield_dateformat&#34;)  \n #end\n    $field.c_zyy  $field.c_lx $field.c_mc ;// $field.c_bz\n#end\n\n#foreach($field in $fields)\n    /**\n     * 设置 $field.c_bz\n     *\n     * @param $field.c_mc $field.c_lx\n     */\n    public void ${field.c_setmethod}(${field.c_lx} ${field.c_mc}) {\n        this.${field.c_mc}=${field.c_mc};\n    }\n\n    /**\n     * 取得 $field.c_bz\n     *\n     * @return $field.c_lx\n     */\n    public ${field.c_lx} ${field.c_getmethod}() {\n        return this.${field.c_mc};\n    }\n#end\n}', '201804071848123860000003', 'JWeb框架手脚框'),
	('201804130342397420000025', 'JWeb_Validate', 'package ${package_validate};\n\nimport java.util.Map;\nimport system.web.validate.model.ValidateResultModel;\nimport system.web.validate.model.ValidateFieldModel;\nimport system.web.JWeb;\nimport system.web.validate.model.ValidateModel;\n\npublic class ${bean.bean_mc}Validate extends ValidateModel {\n\n    public ${bean.bean_mc}Validate() {\n        super(JSON_MODEL);\n    }\n\n    @Override\n    public void iniValidate() {\n        super\n#foreach($field in $fields)\n #if($field.v_bxjiancha!=&#39;w&#39;)\n#set($bxjiancha=false)\n   #if($field.v_bxjiancha==&#39;s&#39;)\n     #set($bxjiancha=true)\n   #end\n                .put(&#34;$field.c_mc&#34;,$field.v_zzbds, $field.v_cuowuxx, $bxjiancha)//$field.c_bz\n #end\n#end\n;\n    }\n\n    @Override\n    public ValidateResultModel recheck(JWeb jw, Map&#60;String, ValidateFieldModel&#62; map, ValidateResultModel vr) {\n        return vr;\n    }\n\n}', '201804071848123860000003', 'JWeb框架手脚框'),
	('201804130343164340000026', 'Mysql_CreateTable', 'CREATE TABLE IF NOT EXISTS `${bean.bean_mc}`(\n#set($ttype=&#39;&#39;)\n#set($tisnull=&#39;&#39;)\n#set($count=1)\n#foreach($field in ${fields})\n    #if(${field.t_lx}==&#39;VARCHAR&#39;||${field.t_lx}==&#39;CHAR&#39;)\n        #set($ttype=&#34;${field.t_lx}(${field.t_cd})&#34;)\n    #else\n        #set($ttype=&#34;${field.t_lx}&#34;)\n    #end\n    #if(${field.t_yxkong}==&#39;s&#39;)\n        #set(${tisnull}=&#39; DEFAULT NULL&#39;)\n    #else\n        #set(${tisnull}=&#39; NOT NULL&#39;)\n    #end\n    #if($count==1)\n     #set($count=2)\n    `${field.t_mc}` $ttype $tisnull  /*${field.t_bz}*/\n    #else\n    ,`${field.t_mc}` $ttype $tisnull /*${field.t_bz}*/\n    #end\n#end\n\n#foreach($field in ${fields})\n    #if(${field.t_sy}==&#39;s&#39;)\n    ,KEY `${field.t_mc}` (`${field.t_mc}`)\n    #end\n    #if(${field.t_sy}==&#39;wy&#39;)\n    ,UNIQUE KEY `${field.t_mc}` (`${field.t_mc}`)\n    #end\n    #if(${field.t_sy}==&#39;zj&#39;)\n    ,PRIMARY KEY (`${field.t_mc}`)\n    #end\n#end\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;', '201804071848123860000003', 'JWeb框架手脚框'),
	('201804130344466050000029', 'JS_GetAndSet', '    function get${bean.mybean_mc}FormData() {\n        var data = {};\n\n#foreach($field in $fields)\n        data.${field.c_mc}= $(&#39;#${field.c_mc}&#39;).val()//${field.c_bz}\n#end\n        return data;\n    }\n\n    function setCModelFormData() {\n#foreach($field in $fields)\n        $(&#39;#${field.c_mc}&#39;).val(&#39;&#39;)\n#end\n    }', '201804071854001710000013', '公共碎片'),
	('201804130344585070000030', 'html_input', '#foreach($field in $fields)\n&#60;input type=&#34;text&#34; name=&#34;${field.c_mc}&#34; id=&#34;${field.c_mc}&#34; />\n#end\n\n\n\n#foreach($field in $fields)\n&#60;input type=&#34;text&#34; name=&#34;${field.c_mc}&#34; id=&#34;${field.c_mc}&#34; value=&#34;#$#{obj.${field.c_mc}}&#34; />\n#end', '201804071854001710000013', '公共碎片'),
	('201804130345092340000031', 'Ligerui_GRID', '#set($mycount=1)\n#foreach($field in $fields)\n #if($mycount==1)\n#set($mycount=2)\n    {display: &#39;${field.c_bz}&#39;, name: &#39;${field.c_mc}&#39;, width: 110, align: &#39;center&#39;}\n #else\n    ,{display: &#39;${field.c_bz}&#39;, name: &#39;${field.c_mc}&#39;, width: 110, align: &#39;center&#39;}\n #end\n#end', '201804071854001710000013', '公共碎片'),
	('201804130345252660000032', 'easyUI_GRID', '&#60;table id=&#34;dg&#34; class=&#34;easyui-datagrid&#34;\n                       style=&#34;width:97%;height:90%&#34;\n                       data-options=&#34;rownumbers:true,singleSelect:true,url:&#39;${path_home}/cc/mybean/field/s/selectAllByJson.jw&#39;,method:&#39;post&#39;,queryParams: {zj:&#39;&#39;},autoRowHeight:true,\n                       pagination:true,\n                       pageSize:50,\n                       toolbar:&#39;#tb&#39;\n                       &#34;>\n                    &#60;thead>\n                        &#60;tr>\n#foreach($field in ${fields})\n    #if(${field.t_sy}==&#39;zj&#39;)\n          &#60;th data-options=&#34;field:&#39;${field.t_mc}&#39;&#34;>ID&#60;/th>\n          &#60;th data-options=&#34;field:&#39;ck&#39;,checkbox:true&#34;>&#60;/th>\n    #else\n      &#60;th data-options=&#34;field:&#39;${field.t_mc}&#39;,width:60&#34;>&#60;div>${field.c_bz}&#60;/div>${field.t_mc}&#60;/th>\n    #end\n#end\n                        &#60;/tr>\n                    &#60;/thead>\n                &#60;/table>', '201804071854001710000013', '公共碎片'),
	('201804130345426970000033', 'JSONSet', '#foreach($field in $fields)\n $(&#34;#$field.c_mc&#34;).val(data.$field.c_mc)//$field.c_bz\n#end', '201804071854001710000013', '公共碎片'),
	('201804182215213960000009', 'GetJsonByObject', 'function getJsonBy${bean.bean_mc}(obj){\nif(!obj)return &#34;&#34;;\n#foreach($field in $fields)\n#if(${field.t_sy}==&#39;zj&#39;)\n        var str=&#39;{&#34;${field.c_mc}&#34;:&#34;&#39;+obj.${field.c_mc}+&#39;&#34;&#39;\n#end\n#end\n#foreach($field in $fields)\n#if(${field.t_sy}!=&#39;zj&#39;)\n        +&#39;,&#34;${field.c_mc}&#34;:&#34;&#39;+obj.${field.c_mc}+&#39;&#34;&#39;\n#end\n#end\nreturn str+&#34;}&#34;;\n}', '201804071854001710000013', '公共碎片');
/*!40000 ALTER TABLE `CModel` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `CModelFL` (
  `cmodelfl_id` char(24) NOT NULL,
  `cmodelfl_pid` char(24) NOT NULL,
  `cmodelfl_name` char(50) NOT NULL,
  PRIMARY KEY (`cmodelfl_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `CModelFL` DISABLE KEYS */;
INSERT INTO `CModelFL` (`cmodelfl_id`, `cmodelfl_pid`, `cmodelfl_name`) VALUES
	('201804071848123860000003', '0', 'JWeb框架手脚框'),
	('201804071848338390000004', '201804071848123860000003', '基础模板'),
	('201804071848491190000005', '201804071848123860000003', '业务模板'),
	('201804071851344160000006', '0', '组件封装'),
	('201804071851562990000007', '201804071851344160000006', '树'),
	('201804071852050220000008', '201804071851344160000006', '选择框'),
	('201804071853071380000009', '0', '业务交互封装'),
	('201804071853363970000010', '201804071853071380000009', '一对一'),
	('201804071853415460000011', '201804071853071380000009', '一对多'),
	('201804071853471530000012', '201804071853071380000009', '多对多'),
	('201804071854001710000013', '0', '公共碎片'),
	('201804071854337220000014', '201804071851344160000006', '设置中心');
/*!40000 ALTER TABLE `CModelFL` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `Fangan1` (
  `fanganfl_id` char(24) NOT NULL,
  `fanganfl_name` varchar(50) NOT NULL,
  `fangan1_zj` char(24) NOT NULL,
  `fangan1_mc` varchar(50) DEFAULT NULL,
  `fangan1_bz` varchar(50) DEFAULT NULL,
  `fangan1_zt` char(1) NOT NULL,
  `ry_id` char(24) NOT NULL,
  `ry_name` varchar(50) NOT NULL,
  `fangan1_zhidanshijian` datetime NOT NULL,
  `fangan1_shenpishijian` datetime NOT NULL,
  `fangan1_px` int(11) NOT NULL,
  PRIMARY KEY (`fangan1_zj`),
  UNIQUE KEY `fangan1_mc` (`fangan1_mc`),
  KEY `fanganfl_id` (`fanganfl_id`),
  KEY `fangan1_zt` (`fangan1_zt`),
  KEY `fangan1_zhidanshijian` (`fangan1_zhidanshijian`),
  KEY `fangan1_shenpishijian` (`fangan1_shenpishijian`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `Fangan1` DISABLE KEYS */;
INSERT INTO `Fangan1` (`fanganfl_id`, `fanganfl_name`, `fangan1_zj`, `fangan1_mc`, `fangan1_bz`, `fangan1_zt`, `ry_id`, `ry_name`, `fangan1_zhidanshijian`, `fangan1_shenpishijian`, `fangan1_px`) VALUES
	('201804101552378910000001', '32aa', '201805012025449690000036', 'bean', '', '0', '201711281619003970000001', '汪春滋', '2018-05-01 20:25:44', '2018-05-01 20:25:44', 0),
	('201804101552378910000001', '32aa', '201805041151533010000001', '单-XXX方案名', 'wqeqweqwe', '0', '201711281619003970000001', '汪春滋', '2018-05-04 11:51:53', '2018-05-04 11:51:53', 1);
/*!40000 ALTER TABLE `Fangan1` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `Fangan2` (
  `fangan1_zj` char(24) NOT NULL,
  `fangan2_zj` char(24) NOT NULL,
  `fangan2_filepath` varchar(200) NOT NULL,
  `fangan2_filename` varchar(200) NOT NULL,
  `fangan2_bz` varchar(200) DEFAULT NULL,
  `cmodel_zj` char(24) NOT NULL,
  `cmodel_mc` varchar(50) NOT NULL,
  PRIMARY KEY (`fangan2_zj`),
  KEY `fangan1_zj` (`fangan1_zj`),
  KEY `cmodel_zj` (`cmodel_zj`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `Fangan2` DISABLE KEYS */;
INSERT INTO `Fangan2` (`fangan1_zj`, `fangan2_zj`, `fangan2_filepath`, `fangan2_filename`, `fangan2_bz`, `cmodel_zj`, `cmodel_mc`) VALUES
	('201805012025449690000036', '201805021442476590000365', '${package_bean}', '${bean.bean_mc}.java', '', '201804130342266070000024', 'JWeb_Bean'),
	('201805012025449690000036', '201805021442476590000366', 'wx.web.bean', '${bean1.bean_mc}.java', '', '201804130342266070000024', 'JWeb_Bean'),
	('201805041151533010000001', '201805041203077090000007', '${package_bean}', '${bean.bean_mc}.java', 'bean', '201804130342266070000024', 'JWeb_Bean'),
	('201805041151533010000001', '201805041203077100000008', '${package_validate}', '${name_validate}.java', '校验', '201804130342397420000025', 'JWeb_Validate');
/*!40000 ALTER TABLE `Fangan2` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `FanganFL` (
  `fanganfl_id` char(24) NOT NULL,
  `fanganfl_pid` char(24) NOT NULL,
  `fanganfl_name` char(50) NOT NULL,
  PRIMARY KEY (`fanganfl_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `FanganFL` DISABLE KEYS */;
INSERT INTO `FanganFL` (`fanganfl_id`, `fanganfl_pid`, `fanganfl_name`) VALUES
	('201804101552378910000001', '0', '32aa');
/*!40000 ALTER TABLE `FanganFL` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `JingyanKuFL` (
  `jingyankufl_id` char(24) NOT NULL,
  `jingyankufl_pid` char(24) NOT NULL,
  `jingyankufl_name` char(50) NOT NULL,
  PRIMARY KEY (`jingyankufl_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `JingyanKuFL` DISABLE KEYS */;
INSERT INTO `JingyanKuFL` (`jingyankufl_id`, `jingyankufl_pid`, `jingyankufl_name`) VALUES
	('201801291207394470000007', '0', '前言'),
	('201801291207430510000008', '0', '文档中心');
/*!40000 ALTER TABLE `JingyanKuFL` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `JSDJ` (
  `jsdj_zj` char(24) NOT NULL,
  `jsdj_dm` int(11) NOT NULL,
  `jsdj_mc` varchar(50) NOT NULL,
  `jsdj_bz` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`jsdj_zj`),
  UNIQUE KEY `jsdj_dm` (`jsdj_dm`),
  UNIQUE KEY `jsdj_mc` (`jsdj_mc`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `JSDJ` DISABLE KEYS */;
INSERT INTO `JSDJ` (`jsdj_zj`, `jsdj_dm`, `jsdj_mc`, `jsdj_bz`) VALUES
	('201707311429218510000002', 1, '股东层', ''),
	('201707311429287670000003', 2, '总监层', ''),
	('201707311429363810000004', 3, '经理层', '');
/*!40000 ALTER TABLE `JSDJ` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `Mybean` (
  `mybean_zj` char(24) NOT NULL,
  `mybean_px` int(11) DEFAULT NULL,
  `mypackage_id` char(24) NOT NULL,
  `mybean_mc` varchar(50) NOT NULL,
  `mybean_bz` varchar(50) DEFAULT NULL,
  `package_bean` varchar(100) DEFAULT NULL,
  `package_soo` varchar(100) DEFAULT NULL,
  `name_soo` varchar(100) DEFAULT NULL,
  `package_service` varchar(100) DEFAULT NULL,
  `name_service` varchar(100) DEFAULT NULL,
  `package_hm` varchar(100) DEFAULT NULL,
  `name_hmA` varchar(100) DEFAULT NULL,
  `name_hmD` varchar(100) DEFAULT NULL,
  `name_hmU` varchar(100) DEFAULT NULL,
  `name_hmS` varchar(100) DEFAULT NULL,
  `package_validate` varchar(100) DEFAULT NULL,
  `name_validate` varchar(100) DEFAULT NULL,
  `package_cache` varchar(100) DEFAULT NULL,
  `name_cache` varchar(100) DEFAULT NULL,
  `package_vo` varchar(100) DEFAULT NULL,
  `name_vo` varchar(100) DEFAULT NULL,
  `vpackage_admin` varchar(100) DEFAULT NULL,
  `vname_adminA` varchar(100) DEFAULT NULL,
  `vname_adminD` varchar(100) DEFAULT NULL,
  `vname_adminS` varchar(100) DEFAULT NULL,
  `vname_adminU` varchar(100) DEFAULT NULL,
  `vpackage_admin_js` varchar(100) DEFAULT NULL,
  `vname_admin_js` varchar(100) DEFAULT NULL,
  `vpackage_admin_css` varchar(100) DEFAULT NULL,
  `vname_admin_css` varchar(100) DEFAULT NULL,
  `power_code` varchar(100) DEFAULT NULL,
  `power_codeA` varchar(100) DEFAULT NULL,
  `power_codeD` varchar(100) DEFAULT NULL,
  `power_codeS` varchar(100) DEFAULT NULL,
  `power_codeU` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`mybean_zj`),
  KEY `mypackage_id` (`mypackage_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `Mybean` DISABLE KEYS */;
INSERT INTO `Mybean` (`mybean_zj`, `mybean_px`, `mypackage_id`, `mybean_mc`, `mybean_bz`, `package_bean`, `package_soo`, `name_soo`, `package_service`, `name_service`, `package_hm`, `name_hmA`, `name_hmD`, `name_hmU`, `name_hmS`, `package_validate`, `name_validate`, `package_cache`, `name_cache`, `package_vo`, `name_vo`, `vpackage_admin`, `vname_adminA`, `vname_adminD`, `vname_adminS`, `vname_adminU`, `vpackage_admin_js`, `vname_admin_js`, `vpackage_admin_css`, `vname_admin_css`, `power_code`, `power_codeA`, `power_codeD`, `power_codeS`, `power_codeU`) VALUES
	('201804130219533810000001', 1, '201802191634445960000003', 'Fangan1', '方案头', 'wx.web.cc.bean', 'wx.web.cc.soo', '&#60;?c>Soo', 'wx.web.cc.service', '&#60;?c>Service', 'wx.web.cc.hm.&#60;?c>', '&#60;?c>ADU', '&#60;?c>ADU', '&#60;?c>ADU', '&#60;?c>S', 'wx.web.cc.hm.&#60;?c>.validate', '&#60;?c>Validate', 'wx.web.cc.hm.&#60;?c>.cache', '&#60;?c>Cache', 'wx.web.cc.hm.&#60;?c>.vo', '&#60;?c>VO', 'cc.&#60;?c1>', '&#60;?c1>_A', '&#60;?c1>', '&#60;?c1>', '&#60;?c1>_U', 'cc.&#60;?c1>.js', '&#60;?c1>', 'cc.&#60;?c1>.css', '&#60;?c1>', 'Y101_16', '&#60;?p>A', '&#60;?p>D', '&#60;?p>S', '&#60;?p>U'),
	('201804130220119300000002', 1, '201802191634445960000003', 'Fangan2', '方案体', 'wx.web.cc.bean', 'wx.web.cc.soo', '&#60;?c>Soo', 'wx.web.cc.service', '&#60;?c>Service', 'wx.web.cc.hm.&#60;?c>', '&#60;?c>ADU', '&#60;?c>ADU', '&#60;?c>ADU', '&#60;?c>S', 'wx.web.cc.hm.&#60;?c>.validate', '&#60;?c>Validate', 'wx.web.cc.hm.&#60;?c>.cache', '&#60;?c>Cache', 'wx.web.cc.hm.&#60;?c>.vo', '&#60;?c>VO', 'cc.&#60;?c1>', '&#60;?c1>_A', '&#60;?c1>', '&#60;?c1>', '&#60;?c1>_U', 'cc.&#60;?c1>.js', '&#60;?c1>', 'cc.&#60;?c1>.css', '&#60;?c1>', 'Y101_17', '&#60;?p>A', '&#60;?p>D', '&#60;?p>S', '&#60;?p>U'),
	('201804181443150820000004', 3, '201802191634445960000003', 'Yushizhi', '预设置模板', 'wx.web.base.bean', 'wx.web.base.soo', '&#60;?c>Soo', 'wx.web.base.service', '&#60;?c>Service', 'wx.web.base.hm.&#60;?c>', '&#60;?c>ADU', '&#60;?c>ADU', '&#60;?c>ADU', '&#60;?c>S', 'wx.web.base.hm.&#60;?c>.validate', '&#60;?c>Validate', 'wx.web.base.hm.&#60;?c>.cache', '&#60;?c>Cache', 'wx.web.base.hm.&#60;?c>.vo', '&#60;?c>VO', 'admin.base.&#60;?c1>', '&#60;?c1>_A', '&#60;?c1>', '&#60;?c1>', '&#60;?c1>_U', 'admin.base.&#60;?c1>.js', '&#60;?c1>', 'admin.base.&#60;?c1>.css', '&#60;?c1>', 'Y101_16_2', '&#60;?p>A', '&#60;?p>D', '&#60;?p>S', '&#60;?p>U'),
	('201804182157543400000003', 4, '201802191634445960000003', 'Yushizhi2', '预设置模板2', 'wx.web.base.bean', 'wx.web.base.soo', '&#60;?c>Soo', 'wx.web.base.service', '&#60;?c>Service', 'wx.web.base.hm.&#60;?c>', '&#60;?c>ADU', '&#60;?c>ADU', '&#60;?c>ADU', '&#60;?c>S', 'wx.web.base.hm.&#60;?c>.validate', '&#60;?c>Validate', 'wx.web.base.hm.&#60;?c>.cache', '&#60;?c>Cache', 'wx.web.base.hm.&#60;?c>.vo', '&#60;?c>VO', 'admin.base.&#60;?c1>', '&#60;?c1>_A', '&#60;?c1>', '&#60;?c1>', '&#60;?c1>_U', 'admin.base.&#60;?c1>.js', '&#60;?c1>', 'admin.base.&#60;?c1>.css', '&#60;?c1>', 'Y101_16_3', '&#60;?p>A', '&#60;?p>D', '&#60;?p>S', '&#60;?p>U');
/*!40000 ALTER TABLE `Mybean` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `Mybeanfield` (
  `mybeanfield_zj` char(24) NOT NULL,
  `bean_zj` char(24) NOT NULL,
  `bean_mc` varchar(50) NOT NULL,
  `mybeanfield_bz` varchar(50) DEFAULT NULL,
  `mybeanfield_dateformat` varchar(50) DEFAULT NULL,
  `c_zyy` varchar(50) NOT NULL,
  `c_lx` varchar(50) NOT NULL,
  `c_mc` varchar(50) NOT NULL,
  `c_bz` varchar(50) NOT NULL,
  `c_setmethod` varchar(50) NOT NULL,
  `c_getmethod` varchar(50) NOT NULL,
  `t_mc` varchar(50) NOT NULL,
  `t_lx` varchar(50) NOT NULL,
  `t_sy` varchar(50) DEFAULT NULL,
  `t_yxkong` varchar(50) NOT NULL,
  `t_cd` varchar(50) DEFAULT NULL,
  `t_bz` varchar(50) DEFAULT NULL,
  `v_zzbds` varchar(200) DEFAULT NULL,
  `v_cuowuxx` varchar(50) DEFAULT NULL,
  `v_bxjiancha` varchar(50) DEFAULT NULL,
  `h_lx` varchar(50) NOT NULL,
  `h_jb` varchar(50) DEFAULT NULL,
  `e_mc` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`mybeanfield_zj`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `Mybeanfield` DISABLE KEYS */;
INSERT INTO `Mybeanfield` (`mybeanfield_zj`, `bean_zj`, `bean_mc`, `mybeanfield_bz`, `mybeanfield_dateformat`, `c_zyy`, `c_lx`, `c_mc`, `c_bz`, `c_setmethod`, `c_getmethod`, `t_mc`, `t_lx`, `t_sy`, `t_yxkong`, `t_cd`, `t_bz`, `v_zzbds`, `v_cuowuxx`, `v_bxjiancha`, `h_lx`, `h_jb`, `e_mc`) VALUES
	('201802230211003530000002', '', '', '', '', 'private', 'String', '', '', 'set', 'get', '', 'VARCHAR', 'f', 's', '', '', '', '', 's', 'text', 's', ''),
	('201802230702376870000005', '201802191822422930000001', 'HuiYuan', '主键', '', 'private', 'String', 'huiyuan_zj', '主键2', 'setHuiyuan_zj', 'getHuiyuan_zj', 'huiyuan_zj', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', '123'),
	('201802240805324860000001', '201802191822422930000001', 'HuiYuan', '制单时间', 'yyyy-MM-dd HH:mm:ss', 'private', 'Date', 'huiyuan_zhidanshijian', '制单时间', 'setHuiyuan_zhidanshijian', 'getHuiyuan_zhidanshijian', 'huiyuan_zhidanshijian', 'DATETIME', 's', 'f', '19', '制单时间', '&#34;[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}&#34;', '&#34;:请输入日期。例1988-08-21 12:30:59&#34;', 'w', 'date', 'f', '制单时间'),
	('201802240805374790000002', '201802191822422930000001', 'HuiYuan', '审批时间', 'yyyy-MM-dd HH:mm:ss', 'private', 'Date', 'huiyuan_shenpishijian', '审批时间', 'setHuiyuan_shenpishijian', 'getHuiyuan_shenpishijian', 'huiyuan_shenpishijian', 'DATETIME', 's', 'f', '19', '审批时间', '&#34;[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}&#34;', '&#34;:请输入日期。例1988-08-21 12:30:59&#34;', 'w', 'date', 'f', '审批时间'),
	('201802240806065130000003', '201802191822422930000001', 'HuiYuan', '', '', 'private', 'Integer', 'huiyuan_int', '', 'setHuiyuan_int', 'getHuiyuan_int', 'huiyuan_int', 'INT', 'f', 's', '', '', '&#34;-?[0-9]+&#34;', '&#34;:请输入正数&#34;', 's', 'number', 's', '审批时间'),
	('201802240806147750000004', '201802191822422930000001', 'HuiYuan', '状态', '', 'private', 'String', 'huiyuan_zt', '状态', 'setHuiyuan_zt', 'getHuiyuan_zt', 'huiyuan_zt', 'CHAR', 's', 'f', '1', '状态', '&#34;[0|1|2|3]{1}&#34;', '&#34;:状态异常&#34;', 's', 'select', 's', '状态'),
	('201803020314418090000004', '201803020313596040000003', 'Mybean', '主键', '', 'private', 'String', 'mybean_zj', '主键', 'setMybean_zj', 'getMybean_zj', 'mybean_zj', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201803020315314880000005', '201803020313596040000003', 'Mybean', '排序', '', 'private', 'Integer', 'mybean_px', '排序', 'setMybean_px', 'getMybean_px', 'mybean_px', 'INT', 's', 's', '', '排序', '&#34;-?[0-9]+&#34;', '&#34;:请输入正数&#34;', 's', 'number', 's', ''),
	('201803020316480320000006', '201803020313596040000003', 'Mybean', '外键（归属包）', '', 'private', 'String', 'mypackage_id', '外键（归属包）', 'setMypackage_id', 'getMypackage_id', 'mypackage_id', 'CHAR', 's', 'f', '24', '外键（归属包）', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;包主键丢失&#34;', 's', 'text', 'f', ''),
	('201803020318427360000007', '201803020313596040000003', 'Mybean', '类名', '', 'private', 'String', 'mybean_mc', '类名', 'setMybean_mc', 'getMybean_mc', 'mybean_mc', 'VARCHAR', 's', 'f', '50', '类名', '&#34;[&#92;&#92;w&#92;&#92;W]{1,50}&#34;', '&#34;类名-过长&#34;', 's', 'text', 's', ''),
	('201803020320295400000008', '201803020313596040000003', 'Mybean', '备注', '', 'private', 'String', 'mybean_bz', '备注', 'setMybean_bz', 'getMybean_bz', 'mybean_bz', 'VARCHAR', 's', 'f', '50', '备注', '&#34;[&#92;&#92;w&#92;&#92;W]{1,50}&#34;', '&#34;备注-过长&#34;', 's', 'text', 's', ''),
	('201803020334296770000009', '201803020313596040000003', 'Mybean', 'bean类包', '', 'private', 'String', 'package_bean', 'bean类包', 'setPackage_bean', 'getPackage_bean', 'package_bean', 'VARCHAR', 's', 'f', '255', 'bean类包', '&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;', '&#34;bean类包过长&#34;', 's', 'text', 's', ''),
	('201803020336164130000010', '201803020313596040000003', 'Mybean', 'soo/dao类包', '', 'private', 'String', 'package_soo', 'soo/dao 类包', 'setPackage_soo', 'getPackage_soo', 'package_soo', 'VARCHAR', 's', 'f', '255', 'soo/dao类包', '&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;', '&#34;soo/dao类包过长&#34;', 's', 'text', 's', ''),
	('201803020336416210000011', '201803020313596040000003', 'Mybean', 'service类包', '', 'private', 'String', 'package_service', 'service类包', 'setPackage_service', 'getPackage_service', 'package_service', 'VARCHAR', 's', 'f', '255', 'service类包', '&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;', '&#34;service类包过长&#34;', 's', 'text', 's', ''),
	('201803020337110170000012', '201803020313596040000003', 'Mybean', 'hm类包', '', 'private', 'String', 'package_hm', 'hm类包', 'setPackage_hm', 'getPackage_hm', 'package_hm', 'VARCHAR', 's', 'f', '255', 'hm类包', '&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;', '&#34;hm类包过长&#34;', 's', 'text', 's', ''),
	('201803020337522660000013', '201803020313596040000003', 'Mybean', 'validate类包', '', 'private', 'String', 'package_validate', 'validate类包', 'setPackage_validate', 'getPackage_validate', 'package_validate', 'VARCHAR', 's', 'f', '255', 'validate类包', '&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;', '&#34;validate类包过长&#34;', 's', 'text', 's', ''),
	('201803020344463550000014', '201803020313596040000003', 'Mybean', 'cache类包', '', 'private', 'String', 'package_cache', 'cache类包', 'setPackage_cache', 'getPackage_cache', 'package_cache', 'VARCHAR', 's', 'f', '255', 'cache类包', '&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;', '&#34;cache类包过长&#34;', 's', 'text', 's', ''),
	('201803020345083220000015', '201803020313596040000003', 'Mybean', 'vo类包', '', 'private', 'String', 'package_vo', 'vo类包', 'setPackage_vo', 'getPackage_vo', 'package_vo', 'VARCHAR', 's', 'f', '255', 'vo类包', '&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;', '&#34;vo类包过长&#34;', 's', 'text', 's', ''),
	('201803020402246000000016', '201803020313596040000003', 'Mybean', 'jsp/html包', '', 'private', 'String', 'vpackage_admin', 'jsp/html包', 'setVpackage_admin', 'getVpackage_admin', 'vpackage_admin', 'VARCHAR', 'f', 'f', '255', 'jsp/html包', '&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;', '&#34;jsp/html包过长&#34;', 's', 'text', 's', ''),
	('201803020403190230000017', '201803020313596040000003', 'Mybean', 'js包', '', 'private', 'String', 'vpackage_admin_js', 'js包', 'setVpackage_admin_js', 'getVpackage_admin_js', 'vpackage_admin_js', 'VARCHAR', 'f', 'f', '255', 'js包', '&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;', '&#34;js包过长&#34;', 's', 'text', 's', ''),
	('201803020403556930000018', '201803020313596040000003', 'Mybean', 'css包', '', 'private', 'String', 'vpackage_admin_css', 'css包', 'setVpackage_admin_css', 'getVpackage_admin_css', 'vpackage_admin_css', 'VARCHAR', 'f', 'f', '255', 'css包', '&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;', '&#34;css包过长&#34;', 's', 'text', 's', ''),
	('201803020406094590000019', '201803020313596040000003', 'Mybean', '权限代码', '', 'private', 'String', 'power_code', '权限代码', 'setPower_code', 'getPower_code', 'power_code', 'VARCHAR', 'f', 'f', '255', '权限代码', '&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;', '&#34;权限代码过长&#34;', 's', 'text', 's', ''),
	('201804040811240230000001', '201802191756030060000001', 'HuiYuanAC', '主键', '', 'private', 'String', 'huiyuanac_zj', '主键', 'setHuiyuanac_zj', 'getHuiyuanac_zj', 'huiyuanac_zj', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201804130222517090000003', '201804130219533810000001', 'Fangan1', '分类外键', '', 'private', 'String', 'fanganfl_id', '分类外键', 'setFanganfl_id', 'getFanganfl_id', 'fanganfl_id', 'CHAR', 's', 'f', '24', '分类外键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;分类外键丢失&#34;', 'f', 'text', 'f', ''),
	('201804130224138240000005', '201804130219533810000001', 'Fangan1', '方案分类', '', 'private', 'String', 'fanganfl_name', '方案分类', 'setFanganfl_name', 'getFanganfl_name', 'fanganfl_name', 'VARCHAR', 'f', 'f', '50', '方案分类', '&#34;[&#92;&#92;w&#92;&#92;W]{1,50}&#34;', '&#34;分类：为空或文本过长&#34;', 's', 'text', 's', ''),
	('201804130225387710000006', '201804130219533810000001', 'Fangan1', '主键', '', 'private', 'String', 'fangan1_zj', '主键', 'setFangan1_zj', 'getFangan1_zj', 'fangan1_zj', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201804130226421800000007', '201804130219533810000001', 'Fangan1', '方案名', '', 'private', 'String', 'fangan1_mc', '方案名', 'setFangan1_mc', 'getFangan1_mc', 'fangan1_mc', 'VARCHAR', 'wy', 's', '50', '方案名', '&#34;[&#92;&#92;w&#92;&#92;W]{1,50}&#34;', '&#34;方案名为空或文本过长&#34;', 's', 'text', 's', '方案名'),
	('201804130227594530000008', '201804130219533810000001', 'Fangan1', '备注', '', 'private', 'String', 'fangan1_bz', '备注', 'setFangan1_bz', 'getFangan1_bz', 'fangan1_bz', 'VARCHAR', 'f', 's', '50', '备注', '&#34;[&#92;&#92;w&#92;&#92;W]{1,50}&#34;', '&#34;备注 文本过长&#34;', 'f', 'text', 's', '方案名'),
	('201804130228204740000009', '201804130219533810000001', 'Fangan1', '状态', '', 'private', 'String', 'fangan1_zt', '状态', 'setFangan1_zt', 'getFangan1_zt', 'fangan1_zt', 'CHAR', 's', 'f', '1', '状态', '&#34;[0|1|2|3]{1}&#34;', '&#34;:状态异常&#34;', 's', 'select', 's', '状态'),
	('201804130231463730000010', '201804130219533810000001', 'Fangan1', '方案制定人主键', '', 'private', 'String', 'ry_id', '方案制定人主键', 'setRy_id', 'getRy_id', 'ry_id', 'CHAR', 'f', 'f', '24', '方案制定人主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;方案制定人主键丢失&#34;', 'w', 'text', 'f', ''),
	('201804130232414220000012', '201804130219533810000001', 'Fangan1', '方案制定人名称', '', 'private', 'String', 'ry_name', '方案制定人名称', 'setRy_name', 'getRy_name', 'ry_name', 'VARCHAR', 'f', 'f', '50', '方案制定人名称', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;方案制定人名称丢失&#34;', 'w', 'text', 'f', '方案制定人'),
	('201804130233577990000013', '201804130219533810000001', 'Fangan1', '制单时间', 'yyyy-MM-dd HH:mm:ss', 'private', 'Date', 'fangan1_zhidanshijian', '制单时间', 'setFangan1_zhidanshijian', 'getFangan1_zhidanshijian', 'fangan1_zhidanshijian', 'DATETIME', 's', 'f', '19', '制单时间', '&#34;[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}&#34;', '&#34;:请输入日期。例1988-08-21 12:30:59&#34;', 'w', 'date', 'f', '制单时间'),
	('201804130234095630000014', '201804130219533810000001', 'Fangan1', '审批时间', 'yyyy-MM-dd HH:mm:ss', 'private', 'Date', 'fangan1_shenpishijian', '审批时间', 'setFangan1_shenpishijian', 'getFangan1_shenpishijian', 'fangan1_shenpishijian', 'DATETIME', 's', 'f', '19', '审批时间', '&#34;[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}&#34;', '&#34;:请输入日期。例1988-08-21 12:30:59&#34;', 'w', 'date', 'f', '审批时间'),
	('201804130327351210000015', '201804130220119300000002', 'Fangan2', '父键', '', 'private', 'String', 'fangan1_zj', '父键', 'setFangan1_zj', 'getFangan1_zj', 'fangan1_zj', 'CHAR', 's', 'f', '24', '父键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;父键丢失&#34;', 's', 'text', 'f', ''),
	('201804130328026310000016', '201804130220119300000002', 'Fangan2', '主键', '', 'private', 'String', 'fangan2_zj', '主键', 'setFangan2_zj', 'getFangan2_zj', 'fangan2_zj', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201804130329437920000018', '201804130220119300000002', 'Fangan2', '排序', '', 'private', 'Integer', 'fangan2_px', '排序', 'setFangan2_px', 'getFangan2_px', 'fangan2_px', 'INT', 'wy', 'f', '', '排序', '&#34;-?[0-9]+&#34;', '&#34;排序:请输入正数&#34;', 's', 'number', 's', '排序'),
	('201804130331462430000020', '201804130220119300000002', 'Fangan2', '文件路径', '', 'private', 'String', 'fangan2_filepath', '文件路径', 'setFangan2_filepath', 'getFangan2_filepath', 'fangan2_filepath', 'VARCHAR', 'f', 'f', '200', '文件路径', '&#34;[&#92;&#92;w&#92;&#92;W]{1,200}&#34;', '&#34;文件路径：为空或文本过长&#34;', 's', 'text', 's', '文件路径'),
	('201804130333133100000021', '201804130220119300000002', 'Fangan2', '文件名', '', 'private', 'String', 'fangan2_filename', '文件名', 'setFangan2_filename', 'getFangan2_filename', 'fangan2_filename', 'VARCHAR', 'f', 'f', '200', '文件名', '&#34;[&#92;&#92;w&#92;&#92;W]{1,200}&#34;', '&#34;文件名：为空或文本过长&#34;', 's', 'text', 's', '文件名'),
	('201804130335251310000022', '201804130220119300000002', 'Fangan2', '模型主键', '', 'private', 'String', 'cmodel_zj', '模型主键', 'setCmodel_zj', 'getCmodel_zj', 'cmodel_zj', 'CHAR', 's', 'f', '24', '模型主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;模型主键丢失&#34;', 'f', 'text', 'f', '模型主键'),
	('201804130336342710000023', '201804130220119300000002', 'Fangan2', '模型名', '', 'private', 'String', 'cmodel_mc', '模型名', 'setCmodel_mc', 'getCmodel_mc', 'cmodel_mc', 'VARCHAR', 'f', 'f', '50', '模型名', '&#34;[&#92;&#92;w&#92;&#92;W]{1,50}&#34;', '&#34;模型名：为空或文本过长&#34;', 's', 'text', 's', '模型名'),
	('201804181443352370000005', '201804181443150820000004', 'Yushizhi', '主键', '', 'private', 'String', 'yushizhi_zj', '主键', 'setYushizhi_zj', 'getYushizhi_zj', 'yushizhi_zj', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201804181448145140000006', '201804181443150820000004', 'Yushizhi', '名称', '', 'private', 'String', 'yushizhi_mc', '名称', 'setYushizhi_mc', 'getYushizhi_mc', 'yushizhi_mc', 'VARCHAR', 'wy', 'f', '50', '名称', '&#34;[&#92;&#92;w&#92;&#92;W]{1,50}&#34;', '&#34;文本过长&#34;', 's', 'text', 's', ''),
	('201804181451430600000007', '201804181443150820000004', 'Yushizhi', '分类外键', '', 'private', 'String', 'yushizhifl_id', '分类外键', 'setYushizhifl_id', 'getYushizhifl_id', 'yushizhifl_id', 'CHAR', 's', 'f', '24', '分类外键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;分类外键丢失&#34;', 'f', 'text', 'f', ''),
	('201804182152013370000001', '201804181443150820000004', 'Yushizhi', '分类名', '', 'private', 'String', 'yushizhifl_name', '分类名', 'setYushizhifl_name', 'getYushizhifl_name', 'yushizhifl_name', 'VARCHAR', 'f', 'f', '50', '分类名', '&#34;[&#92;&#92;w&#92;&#92;W]{1,50}&#34;', '&#34;分类名：为空或文本过长&#34;', 's', 'text', 's', '分类名'),
	('201804182153115450000002', '201804181443150820000004', 'Yushizhi', '备注', '', 'private', 'String', 'yushizhi_bz', '备注', 'setYushizhi_bz', 'getYushizhi_bz', 'yushizhi_bz', 'VARCHAR', 'f', 's', '50', '备注', '&#34;[&#92;&#92;w&#92;&#92;W]{1,50}&#34;', '&#34;备注：文本过长&#34;', 'f', 'text', 's', '备注'),
	('201804182201194150000004', '201804182157543400000003', 'Yushizhi2', '主键', '', 'private', 'String', 'yushizhi2_zj', '主键', 'setYushizhi2_zj', 'getYushizhi2_zj', 'yushizhi2_zj', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201804182201558760000005', '201804182157543400000003', 'Yushizhi2', '备注', '', 'private', 'String', 'yushizhi2_bz', '备注', 'setYushizhi2_bz', 'getYushizhi2_bz', 'yushizhi2_bz', 'VARCHAR', 'f', 's', '50', '备注', '&#34;[&#92;&#92;w&#92;&#92;W]{1,50}&#34;', '&#34;备注：文本过长&#34;', 'f', 'text', 's', '备注'),
	('201804182203296240000006', '201804182157543400000003', 'Yushizhi2', '键', '', 'private', 'String', 'yushizhi2_key', '键', 'setYushizhi2_key', 'getYushizhi2_key', 'yushizhi2_key', 'VARCHAR', 'wy', 'f', '200', '键', '&#34;[&#92;&#92;w&#92;&#92;W]{1,200}&#34;', '&#34;键：为空或文本超200字&#34;', 's', 'text', 's', '键'),
	('201804182204150630000007', '201804182157543400000003', 'Yushizhi2', '值', '', 'private', 'String', 'yushizhi2_value', '值', 'setYushizhi2_value', 'getYushizhi2_value', 'yushizhi2_value', 'VARCHAR', 'f', 's', '200', '值', '&#34;[&#92;&#92;w&#92;&#92;W]{0,200}&#34;', '&#34;值：文本超200字&#34;', 's', 'text', 's', '值'),
	('201804182206560310000008', '201804182157543400000003', 'Yushizhi2', '领头-主键', '', 'private', 'String', 'yushizhi_zj', '领头-主键', 'setYushizhi_zj', 'getYushizhi_zj', 'yushizhi_zj', 'CHAR', 's', 'f', '24', '领头-主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;领头-主键丢失&#34;', 's', 'text', 'f', '值'),
	('201804241334578000000660', '201804182157543400000003', 'Yushizhi2', '', 'yyyy-MM-dd HH:mm:ss', 'private', 'Date', 'yushizhi2_', '', 'setYushizhi2_', 'getYushizhi2_', 'yushizhi2_', 'DATETIME', 'f', 's', '19', '', '&#34;[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}&#34;', '&#34;:请输入日期时间。例1988-08-21 12:30:59&#34;', 's', 'date', 's', '状态'),
	('201804241814081110000128', '201804181443150820000004', 'Yushizhi', '123', 'yyyy-MM-dd HH:mm:ss', 'private', 'String', 'c_mc', 'c_bz', 'setC_mc', 'getC_mc', 'c_mc', 'VARCHAR', 'f', 's', '', '123', '', '', '', 'file', 's', ''),
	('201804251603299240000001', '201804130219533810000001', 'Fangan1', '排序', '', 'private', 'Integer', 'fangan_px', '排序', 'setFangan_px', 'getFangan_px', 'fangan_px', 'INT', 'f', 'f', '11', '排序', '', '', 'w', 'text', 'f', ''),
	('201805011404080310000002', '201805011302065220000001', '1', '主键', 'yyyy-MM-dd', 'private', 'String', '[?c?]_zj', '主键', 'set[?c?]_zj', 'get[?c?]_zj', '[?c?]_zj', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', '99'),
	('201805011404198130000003', '201805011302176140000100', '32', '主键', '', 'private', 'String', '[?c?]_zj', '主键', 'set[?c?]_zj', 'get[?c?]_zj', '[?c?]_zj', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201805011439500820000067', '201805011302113410000034', '11', '主键', '', 'private', 'String', '[?c?]_zj3', '主键', 'set[?c?]_zj3', 'get[?c?]_zj3', '[?c?]_zj3', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201805011439585980000068', '201805011302113410000034', '11', '主键', '', 'private', 'String', '[?c?]_zj3121', '主键', 'set[?c?]_zj3121', 'get[?c?]_zj3121', '[?c?]_zj3121', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', '123123'),
	('201805011440251180000069', '201805011302113410000034', '11', '主键', '', 'private', 'String', '[?c?]_zj31211', '主键', 'set[?c?]_zj31211', 'get[?c?]_zj31211', '[?c?]_zj31211', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', '123123'),
	('201805011440269810000070', '201805011302113410000034', '11', '主键', 'yyyy-MM-dd', 'private', 'String', '[?c?]_zj312112', '主键', 'set[?c?]_zj312112', 'get[?c?]_zj312112', '[?c?]_zj312112', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', '123123'),
	('201805011440288210000071', '201805011302113410000034', '11', '主键', '', 'private', 'String', '[?c?]_zj3121123', '主键', 'set[?c?]_zj3121123', 'get[?c?]_zj3121123', '[?c?]_zj3121123', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', '123123'),
	('201805011440307650000072', '201805011302113410000034', '11', '主键', '', 'private', 'String', '[?c?]_zj31211234', '主键', 'set[?c?]_zj31211234', 'get[?c?]_zj31211234', '[?c?]_zj31211234', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', '123123'),
	('201805011859398130000045', '201805011302113410000034', '11', '主键', '', 'private', 'String', '[?c?]_zj', '主键', 'set[?c?]_zj', 'get[?c?]_zj', '[?c?]_zj', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201805011859457740000046', '201805011302113410000034', '11', '主键2', '', 'private', 'String', '[?c?]_zj2', '主键', 'set[?c?]_zj2', 'get[?c?]_zj2', '[?c?]_zj2', 'CHAR', 'zj', 'f', '24', '主键2', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201805011900052420000047', '201805011302113410000034', '11', '主键21', 'yyyy-MM-dd HH:mm:ss', 'private', 'String', '[?c?]_zj21', '主键', 'set[?c?]_zj21', 'get[?c?]_zj21', '[?c?]_zj21', 'CHAR', 'zj', 'f', '24', '主键21', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', '1231'),
	('201805012022418010000034', '201805012022167250000001', 'MyTest', '主键', '', 'private', 'String', '[?c?]_zj', '主键', 'set[?c?]_zj', 'get[?c?]_zj', '[?c?]_zj', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201805012022449930000035', '201805012022167250000001', 'MyTest', '主键', '', 'private', 'String', '[?c?]_zj1', '主键', 'set[?c?]_zj1', 'get[?c?]_zj1', '[?c?]_zj1', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201805012027307450000072', '201805012026392780000039', 'MyTest1', '主键', '', 'private', 'String', '[?c?]_zj', '主键', 'set[?c?]_zj', 'get[?c?]_zj', '[?c?]_zj', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201805012027367780000073', '201805012026392780000039', 'MyTest1', '主键', '', 'private', 'String', '[?c?]_zj2', '主键', 'set[?c?]_zj2', 'get[?c?]_zj2', '[?c?]_zj2', 'CHAR', 's', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201805012120086940000003', '201805012026392780000039', 'MyTest1', '主键', '', 'private', 'String', '[?c?]_zj21', '主键', 'set[?c?]_zj21', 'get[?c?]_zj21', '[?c?]_zj21', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201805030459480510000033', '201805021827593120000019', 'Wo', '制单时间', 'yyyy-MM-dd HH:mm:ss', 'private', 'Date', 'Wo_zhidanshijian', '制单时间', 'setWo_zhidanshijian', 'getWo_zhidanshijian', 'Wo_zhidanshijian', 'DATETIME', 'f', 'f', '19', '制单时间', '&#34;[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}&#34;', '&#34;制单时间 :请输入日期。例1988-08-21 12:30:59&#34;', 'w', 'date', 'f', '制单时间'),
	('201805031534078220000001', '201805031136441180000063', 'Werwq7', '主键', '', 'private', 'String', 'werwq7_zj2', '主键', 'setWerwq7_zj2', 'getWerwq7_zj2', 'werwq7_zj2', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201805040859367990000054', '201805040845033570000002', 'Mybean', '主键', '', 'private', 'String', 'mybean_zj', '主键', 'setMybean_zj', 'getMybean_zj', 'mybean_zj', 'CHAR', 'zj', 'f', '24', '主键', '&#34;[1-9]{1}[0-9]{23}&#34;', '&#34;主键丢失&#34;', 'f', 'text', 'f', ''),
	('201805040900046660000055', '201805040845033570000002', 'Mybean', '制单时间', 'yyyy-MM-dd HH:mm:ss', 'private', 'Date', 'mybean_zhidanshijian', '制单时间', 'setMybean_zhidanshijian', 'getMybean_zhidanshijian', 'mybean_zhidanshijian', 'DATETIME', 'f', 'f', '19', '制单时间', '&#34;[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}&#34;', '&#34;制单时间 :请输入日期。例1988-08-21 12:30:59&#34;', 'w', 'date', 'f', '制单时间'),
	('201805040903085050000056', '201805040845033570000002', 'Mybean', '制单时间123', 'yyyy-MM-dd HH:mm:ss', 'private', 'Date', 'mybean_zhidanshijian2', '制单时间', 'setMybean_zhidanshijian2', 'getMybean_zhidanshijian2', 'mybean_zhidanshijian2', 'DATETIME', 'f', 'f', '19', '制单时间123', '&#34;[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}&#34;', '&#34;制单时间 :请输入日期。例1988-08-21 12:30:59&#34;', 'w', 'date', 'f', '制单时间');
/*!40000 ALTER TABLE `Mybeanfield` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `MyModel` (
  `mymodel_zj` char(24) NOT NULL,
  `bean_zj` char(24) NOT NULL,
  `bean_mc` varchar(50) NOT NULL,
  `mymodel_mc` varchar(500) DEFAULT NULL,
  `mymodel_nr` text DEFAULT NULL,
  PRIMARY KEY (`mymodel_zj`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `MyModel` DISABLE KEYS */;
INSERT INTO `MyModel` (`mymodel_zj`, `bean_zj`, `bean_mc`, `mymodel_mc`, `mymodel_nr`) VALUES
	('201802270132142440000005', '201802191822422930000001', 'HuiYuan', 'JWeb_Bean', '@system.base.annotation.Table\npublic class HuiYuan {\n\n    @system.base.annotation.ID\n    private  String huiyuan_zj ;// 主键2\n    @system.base.annotation.Time(&#34;yyyy-MM-dd HH:mm:ss&#34;)  \n    private  Date huiyuan_zhidanshijian ;// 制单时间\n    @system.base.annotation.Time(&#34;yyyy-MM-dd HH:mm:ss&#34;)  \n    private  Date huiyuan_shenpishijian ;// 审批时间\n    private  Integer huiyuan_int ;// \n    private  String huiyuan_zt ;// 状态\n\n    /**\n     * 设置 主键2\n     *\n     * @param huiyuan_zj String\n     */\n    public void setHuiyuan_zj(String huiyuan_zj) {\n        this.huiyuan_zj=huiyuan_zj;\n    }\n\n    /**\n     * 取得 主键2\n     *\n     * @return String\n     */\n    public String getHuiyuan_zj() {\n        return this.huiyuan_zj;\n    }\n    /**\n     * 设置 制单时间\n     *\n     * @param huiyuan_zhidanshijian Date\n     */\n    public void setHuiyuan_zhidanshijian(String huiyuan_zhidanshijian) {\n        this.huiyuan_zhidanshijian=huiyuan_zhidanshijian;\n    }\n\n    /**\n     * 取得 制单时间\n     *\n     * @return Date\n     */\n    public String getHuiyuan_zhidanshijian() {\n        return this.huiyuan_zhidanshijian;\n    }\n    /**\n     * 设置 审批时间\n     *\n     * @param huiyuan_shenpishijian Date\n     */\n    public void setHuiyuan_shenpishijian(String huiyuan_shenpishijian) {\n        this.huiyuan_shenpishijian=huiyuan_shenpishijian;\n    }\n\n    /**\n     * 取得 审批时间\n     *\n     * @return Date\n     */\n    public String getHuiyuan_shenpishijian() {\n        return this.huiyuan_shenpishijian;\n    }\n    /**\n     * 设置 \n     *\n     * @param huiyuan_int Integer\n     */\n    public void setHuiyuan_int(String huiyuan_int) {\n        this.huiyuan_int=huiyuan_int;\n    }\n\n    /**\n     * 取得 \n     *\n     * @return Integer\n     */\n    public String getHuiyuan_int() {\n        return this.huiyuan_int;\n    }\n    /**\n     * 设置 状态\n     *\n     * @param huiyuan_zt String\n     */\n    public void setHuiyuan_zt(String huiyuan_zt) {\n        this.huiyuan_zt=huiyuan_zt;\n    }\n\n    /**\n     * 取得 状态\n     *\n     * @return String\n     */\n    public String getHuiyuan_zt() {\n        return this.huiyuan_zt;\n    }\n}'),
	('201802270132178830000006', '201802191822422930000001', 'HuiYuan', 'JWeb_Validate', 'import java.util.Map;\nimport system.web.validate.model.ValidateResultModel;\nimport system.web.validate.model.ValidateFieldModel;\nimport system.web.JWeb;\nimport system.web.validate.model.ValidateModel;\n\npublic class HuiYuanValidate extends ValidateModel {\n\n    public HuiYuanValidate() {\n        super(JSON_MODEL);\n    }\n\n    @Override\n    public void iniValidate() {\n        super\n                .put(&#34;huiyuan_zj&#34;,&#34;[1-9]{1}[0-9]{23}&#34;, &#34;主键丢失&#34;, false)//主键2\n                .put(&#34;huiyuan_int&#34;,&#34;-?[0-9]+&#34;, &#34;:请输入正数&#34;, true)//\n                .put(&#34;huiyuan_zt&#34;,&#34;[0|1|2|3]{1}&#34;, &#34;:状态异常&#34;, true)//状态\n;\n    }\n\n    @Override\n    public ValidateResultModel recheck(JWeb jw, Map<String, ValidateFieldModel> map, ValidateResultModel vr) {\n        return vr;\n    }\n\n}'),
	('201802270132212020000007', '201802191822422930000001', 'HuiYuan', 'MysqlSQL', 'CREATE TABLE IF NOT EXISTS `HuiYuan`(\n    `huiyuan_zj` CHAR(24)  NOT NULL  /*主键*/\n    ,`huiyuan_zhidanshijian` DATETIME  NOT NULL /*制单时间*/\n    ,`huiyuan_shenpishijian` DATETIME  NOT NULL /*审批时间*/\n    ,`huiyuan_int` INT  DEFAULT NULL /**/\n    ,`huiyuan_zt` CHAR(1)  NOT NULL /*状态*/\n\n    ,PRIMARY KEY `huiyuan_zj`\n    ,KEY `huiyuan_zhidanshijian` (`huiyuan_zhidanshijian`)\n    ,KEY `huiyuan_shenpishijian` (`huiyuan_shenpishijian`)\n    ,KEY `huiyuan_zt` (`huiyuan_zt`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;'),
	('201802270132243210000008', '201802191822422930000001', 'HuiYuan', 'JS_GetAndSet', '    function getHuiYuanFormData() {\n        var data = {};\n\n        data.huiyuan_zj= $(&#39;#huiyuan_zj&#39;).val()\n        data.huiyuan_zhidanshijian= $(&#39;#huiyuan_zhidanshijian&#39;).val()\n        data.huiyuan_shenpishijian= $(&#39;#huiyuan_shenpishijian&#39;).val()\n        data.huiyuan_int= $(&#39;#huiyuan_int&#39;).val()\n        data.huiyuan_zt= $(&#39;#huiyuan_zt&#39;).val()\n        return data;\n    }\n\n    function setCModelFormData() {\n        $(&#39;#huiyuan_zj&#39;).val(&#39;&#39;)\n        $(&#39;#huiyuan_zhidanshijian&#39;).val(&#39;&#39;)\n        $(&#39;#huiyuan_shenpishijian&#39;).val(&#39;&#39;)\n        $(&#39;#huiyuan_int&#39;).val(&#39;&#39;)\n        $(&#39;#huiyuan_zt&#39;).val(&#39;&#39;)\n    }'),
	('201802270153495230000001', '201802191822422930000001', 'HuiYuan', 'JWeb_ExcelUp', '//一般引入文件\nimport configuration.file.IniDataByExcelFileModel;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport system.base.annotation.H;\nimport system.base.annotation.M;\nimport system.web.JWeb;\nimport system.web.WebContext;\nimport system.web.file.FI;\nimport system.web.file.engine.FileEngine;\nimport configuration.DBO;\n\n/**\n *\n * @author wangchunzi\n */\n@H(&#34;/fileup/inidata&#34;)\npublic class HuiYuanExcelUp {\n\n    JWeb jw;\n\n    public HuiYuanExcelUp(JWeb jw) {\n        this.jw = jw;\n    }\n    @M(&#34;/fileup/excel&#34;)//fileup/excel.jw \n    //@system.web.power.ann.ZDY(zdy = power.hm.zdy.SQ_UA.class, value = &#34;C2_1&#34;)\n    public void up() {\n        FileEngine file = new FileEngine(jw.request);\n        FI upOne = file.upOne(IniDataByExcelFileModel.class);\n        ExcelTool et = new ExcelTool();\n        List<HuiYuan> list = et.readExcelData(HuiYuan.class, getClassMapShowName(), WebContext.getWebContext().WEB_PATH + upOne.path_saveName);\n        //返回json数据。注意,FI对象重写了toString,此方法现在返回的是json数据\n        for (HuiYuan obj : list) {\n             jw.printOne(DBO.getJSONModel(&#34;-1&#34;, &#34;执行出错，xxxx（不能为空）。&#34;));//校对基本数据与格式是否符合\n             return;\n        }\n//如果需要人性化，请一条条添加入数据库\n        int i = DBO.service.A.addVast(list);\n        if (i == -1) {\n            jw.printOne(DBO.getJSONModel(&#34;-1&#34;, &#34;执行出错，请检查数据唯一性或合法性。&#34;));\n            return;\n        }\n        jw.printOne(i == 0 ? DBO.getJSONModel(&#34;0&#34;, &#34;执行失败，请检查数据格式&#34;)\n                : DBO.getJSONModel(&#34;1&#34;, &#34;执行成功。&#34;));\n\n    }\n\n    private Map<String, String> getClassMapShowName() {\n\n        Map<String, String> map = new HashMap();\n        map.put(&#34;主键2&#34;, &#34;huiyuan_zj&#34;);\n        map.put(&#34;制单时间&#34;, &#34;huiyuan_zhidanshijian&#34;);\n        map.put(&#34;审批时间&#34;, &#34;huiyuan_shenpishijian&#34;);\n        map.put(&#34;&#34;, &#34;huiyuan_int&#34;);\n        map.put(&#34;状态&#34;, &#34;huiyuan_zt&#34;);\n        return map;\n    }\n}'),
	('201803020408439710000020', '201803020313596040000003', 'Mybean', 'MysqlSQL', 'CREATE TABLE IF NOT EXISTS `Mybean`(\n    `mybean_zj` CHAR(24)  NOT NULL  /*主键*/\n    ,`mybean_px` INT  DEFAULT NULL /*排序*/\n    ,`mypackage_id` CHAR(24)  NOT NULL /*外键（归属包）*/\n    ,`mybean_mc` VARCHAR(50)  NOT NULL /*类名*/\n    ,`mybean_bz` VARCHAR(50)  NOT NULL /*备注*/\n    ,`package_bean` VARCHAR(255)  NOT NULL /*bean类包*/\n    ,`package_soo` VARCHAR(255)  NOT NULL /*soo/dao类包*/\n    ,`package_service` VARCHAR(255)  NOT NULL /*service类包*/\n    ,`package_hm` VARCHAR(255)  NOT NULL /*hm类包*/\n    ,`package_validate` VARCHAR(255)  NOT NULL /*validate类包*/\n    ,`package_cache` VARCHAR(255)  NOT NULL /*cache类包*/\n    ,`package_vo` VARCHAR(255)  NOT NULL /*vo类包*/\n    ,`vpackage_admin` VARCHAR(255)  NOT NULL /*jsp/html包*/\n    ,`vpackage_admin_js` VARCHAR(255)  NOT NULL /*js包*/\n    ,`vpackage_admin_css` VARCHAR(255)  NOT NULL /*css包*/\n    ,`power_code` VARCHAR(255)  NOT NULL /*权限代码*/\n\n    ,PRIMARY KEY `mybean_zj`\n    ,KEY `mybean_px` (`mybean_px`)\n    ,KEY `mypackage_id` (`mypackage_id`)\n    ,KEY `mybean_mc` (`mybean_mc`)\n    ,KEY `mybean_bz` (`mybean_bz`)\n    ,KEY `package_bean` (`package_bean`)\n    ,KEY `package_soo` (`package_soo`)\n    ,KEY `package_service` (`package_service`)\n    ,KEY `package_hm` (`package_hm`)\n    ,KEY `package_validate` (`package_validate`)\n    ,KEY `package_cache` (`package_cache`)\n    ,KEY `package_vo` (`package_vo`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;'),
	('201803020408502290000021', '201803020313596040000003', 'Mybean', 'JWeb_Bean', '@system.base.annotation.Table\npublic class Mybean {\n\n    @system.base.annotation.ID\n    private  String mybean_zj ;// 主键\n    private  Integer mybean_px ;// 排序\n    private  String mypackage_id ;// 外键（归属包）\n    private  String mybean_mc ;// 类名\n    private  String mybean_bz ;// 备注\n    private  String package_bean ;// bean类包\n    private  String package_soo ;// soo/dao 类包\n    private  String package_service ;// service类包\n    private  String package_hm ;// hm类包\n    private  String package_validate ;// validate类包\n    private  String package_cache ;// cache类包\n    private  String package_vo ;// vo类包\n    private  String vpackage_admin ;// jsp/html包\n    private  String vpackage_admin_js ;// js包\n    private  String vpackage_admin_css ;// css包\n    private  String power_code ;// 权限代码\n\n    /**\n     * 设置 主键\n     *\n     * @param mybean_zj String\n     */\n    public void setMybean_zj(String mybean_zj) {\n        this.mybean_zj=mybean_zj;\n    }\n\n    /**\n     * 取得 主键\n     *\n     * @return String\n     */\n    public String getMybean_zj() {\n        return this.mybean_zj;\n    }\n    /**\n     * 设置 排序\n     *\n     * @param mybean_px Integer\n     */\n    public void setMybean_px(String mybean_px) {\n        this.mybean_px=mybean_px;\n    }\n\n    /**\n     * 取得 排序\n     *\n     * @return Integer\n     */\n    public String getMybean_px() {\n        return this.mybean_px;\n    }\n    /**\n     * 设置 外键（归属包）\n     *\n     * @param mypackage_id String\n     */\n    public void setMypackage_id(String mypackage_id) {\n        this.mypackage_id=mypackage_id;\n    }\n\n    /**\n     * 取得 外键（归属包）\n     *\n     * @return String\n     */\n    public String getMypackage_id() {\n        return this.mypackage_id;\n    }\n    /**\n     * 设置 类名\n     *\n     * @param mybean_mc String\n     */\n    public void setMybean_mc(String mybean_mc) {\n        this.mybean_mc=mybean_mc;\n    }\n\n    /**\n     * 取得 类名\n     *\n     * @return String\n     */\n    public String getMybean_mc() {\n        return this.mybean_mc;\n    }\n    /**\n     * 设置 备注\n     *\n     * @param mybean_bz String\n     */\n    public void setMybean_bz(String mybean_bz) {\n        this.mybean_bz=mybean_bz;\n    }\n\n    /**\n     * 取得 备注\n     *\n     * @return String\n     */\n    public String getMybean_bz() {\n        return this.mybean_bz;\n    }\n    /**\n     * 设置 bean类包\n     *\n     * @param package_bean String\n     */\n    public void setPackage_bean(String package_bean) {\n        this.package_bean=package_bean;\n    }\n\n    /**\n     * 取得 bean类包\n     *\n     * @return String\n     */\n    public String getPackage_bean() {\n        return this.package_bean;\n    }\n    /**\n     * 设置 soo/dao 类包\n     *\n     * @param package_soo String\n     */\n    public void setPackage_soo(String package_soo) {\n        this.package_soo=package_soo;\n    }\n\n    /**\n     * 取得 soo/dao 类包\n     *\n     * @return String\n     */\n    public String getPackage_soo() {\n        return this.package_soo;\n    }\n    /**\n     * 设置 service类包\n     *\n     * @param package_service String\n     */\n    public void setPackage_service(String package_service) {\n        this.package_service=package_service;\n    }\n\n    /**\n     * 取得 service类包\n     *\n     * @return String\n     */\n    public String getPackage_service() {\n        return this.package_service;\n    }\n    /**\n     * 设置 hm类包\n     *\n     * @param package_hm String\n     */\n    public void setPackage_hm(String package_hm) {\n        this.package_hm=package_hm;\n    }\n\n    /**\n     * 取得 hm类包\n     *\n     * @return String\n     */\n    public String getPackage_hm() {\n        return this.package_hm;\n    }\n    /**\n     * 设置 validate类包\n     *\n     * @param package_validate String\n     */\n    public void setPackage_validate(String package_validate) {\n        this.package_validate=package_validate;\n    }\n\n    /**\n     * 取得 validate类包\n     *\n     * @return String\n     */\n    public String getPackage_validate() {\n        return this.package_validate;\n    }\n    /**\n     * 设置 cache类包\n     *\n     * @param package_cache String\n     */\n    public void setPackage_cache(String package_cache) {\n        this.package_cache=package_cache;\n    }\n\n    /**\n     * 取得 cache类包\n     *\n     * @return String\n     */\n    public String getPackage_cache() {\n        return this.package_cache;\n    }\n    /**\n     * 设置 vo类包\n     *\n     * @param package_vo String\n     */\n    public void setPackage_vo(String package_vo) {\n        this.package_vo=package_vo;\n    }\n\n    /**\n     * 取得 vo类包\n     *\n     * @return String\n     */\n    public String getPackage_vo() {\n        return this.package_vo;\n    }\n    /**\n     * 设置 jsp/html包\n     *\n     * @param vpackage_admin String\n     */\n    public void setVpackage_admin(String vpackage_admin) {\n        this.vpackage_admin=vpackage_admin;\n    }\n\n    /**\n     * 取得 jsp/html包\n     *\n     * @return String\n     */\n    public String getVpackage_admin() {\n        return this.vpackage_admin;\n    }\n    /**\n     * 设置 js包\n     *\n     * @param vpackage_admin_js String\n     */\n    public void setVpackage_admin_js(String vpackage_admin_js) {\n        this.vpackage_admin_js=vpackage_admin_js;\n    }\n\n    /**\n     * 取得 js包\n     *\n     * @return String\n     */\n    public String getVpackage_admin_js() {\n        return this.vpackage_admin_js;\n    }\n    /**\n     * 设置 css包\n     *\n     * @param vpackage_admin_css String\n     */\n    public void setVpackage_admin_css(String vpackage_admin_css) {\n        this.vpackage_admin_css=vpackage_admin_css;\n    }\n\n    /**\n     * 取得 css包\n     *\n     * @return String\n     */\n    public String getVpackage_admin_css() {\n        return this.vpackage_admin_css;\n    }\n    /**\n     * 设置 权限代码\n     *\n     * @param power_code String\n     */\n    public void setPower_code(String power_code) {\n        this.power_code=power_code;\n    }\n\n    /**\n     * 取得 权限代码\n     *\n     * @return String\n     */\n    public String getPower_code() {\n        return this.power_code;\n    }\n}'),
	('201803020408569820000022', '201803020313596040000003', 'Mybean', 'JWeb_Validate', 'import java.util.Map;\nimport system.web.validate.model.ValidateResultModel;\nimport system.web.validate.model.ValidateFieldModel;\nimport system.web.JWeb;\nimport system.web.validate.model.ValidateModel;\n\npublic class MybeanValidate extends ValidateModel {\n\n    public MybeanValidate() {\n        super(JSON_MODEL);\n    }\n\n    @Override\n    public void iniValidate() {\n        super\n                .put(&#34;mybean_zj&#34;,&#34;[1-9]{1}[0-9]{23}&#34;, &#34;主键丢失&#34;, false)//主键\n                .put(&#34;mybean_px&#34;,&#34;-?[0-9]+&#34;, &#34;:请输入正数&#34;, true)//排序\n                .put(&#34;mypackage_id&#34;,&#34;[1-9]{1}[0-9]{23}&#34;, &#34;包主键丢失&#34;, true)//外键（归属包）\n                .put(&#34;mybean_mc&#34;,&#34;[&#92;&#92;w&#92;&#92;W]{1,50}&#34;, &#34;类名-过长&#34;, true)//类名\n                .put(&#34;mybean_bz&#34;,&#34;[&#92;&#92;w&#92;&#92;W]{1,50}&#34;, &#34;备注-过长&#34;, true)//备注\n                .put(&#34;package_bean&#34;,&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;, &#34;bean类包过长&#34;, true)//bean类包\n                .put(&#34;package_soo&#34;,&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;, &#34;soo/dao类包过长&#34;, true)//soo/dao 类包\n                .put(&#34;package_service&#34;,&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;, &#34;service类包过长&#34;, true)//service类包\n                .put(&#34;package_hm&#34;,&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;, &#34;hm类包过长&#34;, true)//hm类包\n                .put(&#34;package_validate&#34;,&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;, &#34;validate类包过长&#34;, true)//validate类包\n                .put(&#34;package_cache&#34;,&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;, &#34;cache类包过长&#34;, true)//cache类包\n                .put(&#34;package_vo&#34;,&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;, &#34;vo类包过长&#34;, true)//vo类包\n                .put(&#34;vpackage_admin&#34;,&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;, &#34;jsp/html包过长&#34;, true)//jsp/html包\n                .put(&#34;vpackage_admin_js&#34;,&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;, &#34;js包过长&#34;, true)//js包\n                .put(&#34;vpackage_admin_css&#34;,&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;, &#34;css包过长&#34;, true)//css包\n                .put(&#34;power_code&#34;,&#34;[&#92;&#92;w&#92;&#92;W]{1,255}&#34;, &#34;权限代码过长&#34;, true)//权限代码\n;\n    }\n\n    @Override\n    public ValidateResultModel recheck(JWeb jw, Map<String, ValidateFieldModel> map, ValidateResultModel vr) {\n        return vr;\n    }\n\n}'),
	('201803020409091300000023', '201803020313596040000003', 'Mybean', 'JS_GetAndSet', '    function getMybeanFormData() {\n        var data = {};\n\n        data.mybean_zj= $(&#39;#mybean_zj&#39;).val()\n        data.mybean_px= $(&#39;#mybean_px&#39;).val()\n        data.mypackage_id= $(&#39;#mypackage_id&#39;).val()\n        data.mybean_mc= $(&#39;#mybean_mc&#39;).val()\n        data.mybean_bz= $(&#39;#mybean_bz&#39;).val()\n        data.package_bean= $(&#39;#package_bean&#39;).val()\n        data.package_soo= $(&#39;#package_soo&#39;).val()\n        data.package_service= $(&#39;#package_service&#39;).val()\n        data.package_hm= $(&#39;#package_hm&#39;).val()\n        data.package_validate= $(&#39;#package_validate&#39;).val()\n        data.package_cache= $(&#39;#package_cache&#39;).val()\n        data.package_vo= $(&#39;#package_vo&#39;).val()\n        data.vpackage_admin= $(&#39;#vpackage_admin&#39;).val()\n        data.vpackage_admin_js= $(&#39;#vpackage_admin_js&#39;).val()\n        data.vpackage_admin_css= $(&#39;#vpackage_admin_css&#39;).val()\n        data.power_code= $(&#39;#power_code&#39;).val()\n        return data;\n    }\n\n    function setCModelFormData() {\n        $(&#39;#mybean_zj&#39;).val(&#39;&#39;)\n        $(&#39;#mybean_px&#39;).val(&#39;&#39;)\n        $(&#39;#mypackage_id&#39;).val(&#39;&#39;)\n        $(&#39;#mybean_mc&#39;).val(&#39;&#39;)\n        $(&#39;#mybean_bz&#39;).val(&#39;&#39;)\n        $(&#39;#package_bean&#39;).val(&#39;&#39;)\n        $(&#39;#package_soo&#39;).val(&#39;&#39;)\n        $(&#39;#package_service&#39;).val(&#39;&#39;)\n        $(&#39;#package_hm&#39;).val(&#39;&#39;)\n        $(&#39;#package_validate&#39;).val(&#39;&#39;)\n        $(&#39;#package_cache&#39;).val(&#39;&#39;)\n        $(&#39;#package_vo&#39;).val(&#39;&#39;)\n        $(&#39;#vpackage_admin&#39;).val(&#39;&#39;)\n        $(&#39;#vpackage_admin_js&#39;).val(&#39;&#39;)\n        $(&#39;#vpackage_admin_css&#39;).val(&#39;&#39;)\n        $(&#39;#power_code&#39;).val(&#39;&#39;)\n    }'),
	('201804181052595040000001', '201804130219533810000001', 'Fangan1', 'easyUI_GRID', '&#60;table id=&#34;dg&#34; class=&#34;easyui-datagrid&#34;\n                       style=&#34;width:97%;height:90%&#34;\n                       data-options=&#34;rownumbers:true,singleSelect:true,url:&#39;${path_home}/cc/mybean/field/s/selectAllByJson.jw&#39;,method:&#39;post&#39;,queryParams: {zj:&#39;&#39;},autoRowHeight:true,\n                       pagination:true,\n                       pageSize:50,\n                       toolbar:&#39;#tb&#39;\n                       &#34;>\n                    &#60;thead>\n                        &#60;tr>\n      &#60;th data-options=&#34;field:&#39;fanganfl_id&#39;,width:60&#34;>&#60;div>分类外键&#60;/div>fanganfl_id&#60;/th>\n      &#60;th data-options=&#34;field:&#39;fanganfl_name&#39;,width:60&#34;>&#60;div>方案分类&#60;/div>fanganfl_name&#60;/th>\n          &#60;th data-options=&#34;field:&#39;fangan1_zj&#39;&#34;>ID&#60;/th>\n          &#60;th data-options=&#34;field:&#39;ck&#39;,checkbox:true&#34;>&#60;/th>\n      &#60;th data-options=&#34;field:&#39;fangan1_mc&#39;,width:60&#34;>&#60;div>方案名&#60;/div>fangan1_mc&#60;/th>\n      &#60;th data-options=&#34;field:&#39;fangan1_bz&#39;,width:60&#34;>&#60;div>备注&#60;/div>fangan1_bz&#60;/th>\n      &#60;th data-options=&#34;field:&#39;fangan1_zt&#39;,width:60&#34;>&#60;div>状态&#60;/div>fangan1_zt&#60;/th>\n      &#60;th data-options=&#34;field:&#39;ry_id&#39;,width:60&#34;>&#60;div>方案制定人主键&#60;/div>ry_id&#60;/th>\n      &#60;th data-options=&#34;field:&#39;ry_name&#39;,width:60&#34;>&#60;div>方案制定人名称&#60;/div>ry_name&#60;/th>\n      &#60;th data-options=&#34;field:&#39;fangan1_zhidanshijian&#39;,width:60&#34;>&#60;div>制单时间&#60;/div>fangan1_zhidanshijian&#60;/th>\n      &#60;th data-options=&#34;field:&#39;fangan1_shenpishijian&#39;,width:60&#34;>&#60;div>审批时间&#60;/div>fangan1_shenpishijian&#60;/th>\n                        &#60;/tr>\n                    &#60;/thead>\n                &#60;/table>'),
	('201804241518398510000726', '201804182157543400000003', 'Yushizhi2', 'JWeb_Bean', '@system.base.annotation.Table\npublic class Yushizhi2 {\n\n    @system.base.annotation.ID\n    private  String yushizhi2_zj ;// 主键\n    private  String yushizhi2_bz ;// 备注\n    private  String yushizhi2_key ;// 键\n    private  String yushizhi2_value ;// 值\n    private  String yushizhi_zj ;// 领头-主键\n    @system.base.annotation.Time(&#34;yyyy-MM-dd HH:mm:ss&#34;)  \n    private  Date yushizhi2_ ;// \n\n    /**\n     * 设置 主键\n     *\n     * @param yushizhi2_zj String\n     */\n    public void setYushizhi2_zj(String yushizhi2_zj) {\n        this.yushizhi2_zj=yushizhi2_zj;\n    }\n\n    /**\n     * 取得 主键\n     *\n     * @return String\n     */\n    public String getYushizhi2_zj() {\n        return this.yushizhi2_zj;\n    }\n    /**\n     * 设置 备注\n     *\n     * @param yushizhi2_bz String\n     */\n    public void setYushizhi2_bz(String yushizhi2_bz) {\n        this.yushizhi2_bz=yushizhi2_bz;\n    }\n\n    /**\n     * 取得 备注\n     *\n     * @return String\n     */\n    public String getYushizhi2_bz() {\n        return this.yushizhi2_bz;\n    }\n    /**\n     * 设置 键\n     *\n     * @param yushizhi2_key String\n     */\n    public void setYushizhi2_key(String yushizhi2_key) {\n        this.yushizhi2_key=yushizhi2_key;\n    }\n\n    /**\n     * 取得 键\n     *\n     * @return String\n     */\n    public String getYushizhi2_key() {\n        return this.yushizhi2_key;\n    }\n    /**\n     * 设置 值\n     *\n     * @param yushizhi2_value String\n     */\n    public void setYushizhi2_value(String yushizhi2_value) {\n        this.yushizhi2_value=yushizhi2_value;\n    }\n\n    /**\n     * 取得 值\n     *\n     * @return String\n     */\n    public String getYushizhi2_value() {\n        return this.yushizhi2_value;\n    }\n    /**\n     * 设置 领头-主键\n     *\n     * @param yushizhi_zj String\n     */\n    public void setYushizhi_zj(String yushizhi_zj) {\n        this.yushizhi_zj=yushizhi_zj;\n    }\n\n    /**\n     * 取得 领头-主键\n     *\n     * @return String\n     */\n    public String getYushizhi_zj() {\n        return this.yushizhi_zj;\n    }\n    /**\n     * 设置 \n     *\n     * @param yushizhi2_ Date\n     */\n    public void setYushizhi2_(Date yushizhi2_) {\n        this.yushizhi2_=yushizhi2_;\n    }\n\n    /**\n     * 取得 \n     *\n     * @return Date\n     */\n    public Date getYushizhi2_() {\n        return this.yushizhi2_;\n    }\n}'),
	('201804251747213790000001', '201804130220119300000002', 'Fangan2', 'Mysql_CreateTable', 'CREATE TABLE IF NOT EXISTS `Fangan2`(\n    `fangan1_zj` CHAR(24)  NOT NULL  /*父键*/\n    ,`fangan2_zj` CHAR(24)  NOT NULL /*主键*/\n    ,`fangan2_px` INT  NOT NULL /*排序*/\n    ,`fangan2_filepath` VARCHAR(200)  NOT NULL /*文件路径*/\n    ,`fangan2_filename` VARCHAR(200)  NOT NULL /*文件名*/\n    ,`cmodel_zj` CHAR(24)  NOT NULL /*模型主键*/\n    ,`cmodel_mc` VARCHAR(50)  NOT NULL /*模型名*/\n\n    ,KEY `fangan1_zj` (`fangan1_zj`)\n    ,PRIMARY KEY (`fangan2_zj`)\n    ,KEY `cmodel_zj` (`cmodel_zj`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;'),
	('201805011420066850000002', '201805011302065220000001', '1', 'JWeb_Bean', '@system.base.annotation.Table\npublic class ${bean.mybean_mc} {\n\n    @system.base.annotation.ID\n    private  String [?c?]_zj ;// 主键\n\n    /**\n     * 设置 主键\n     *\n     * @param [?c?]_zj String\n     */\n    public void set[?c?]_zj(String [?c?]_zj) {\n        this.[?c?]_zj=[?c?]_zj;\n    }\n\n    /**\n     * 取得 主键\n     *\n     * @return String\n     */\n    public String get[?c?]_zj() {\n        return this.[?c?]_zj;\n    }\n}'),
	('201805011441348840000075', '201805011302113410000034', '11', 'Mysql_CreateTable', 'CREATE TABLE IF NOT EXISTS `${bean.mybean_mc}`(\n    `[?c?]_zj3` CHAR(24)  NOT NULL  /*主键*/\n    ,`[?c?]_zj3121` CHAR(24)  NOT NULL /*主键*/\n    ,`[?c?]_zj31211` CHAR(24)  NOT NULL /*主键*/\n    ,`[?c?]_zj312112` CHAR(24)  NOT NULL /*主键*/\n    ,`[?c?]_zj3121123` CHAR(24)  NOT NULL /*主键*/\n    ,`[?c?]_zj31211234` CHAR(24)  NOT NULL /*主键*/\n\n    ,PRIMARY KEY (`[?c?]_zj3`)\n    ,PRIMARY KEY (`[?c?]_zj3121`)\n    ,PRIMARY KEY (`[?c?]_zj31211`)\n    ,PRIMARY KEY (`[?c?]_zj312112`)\n    ,PRIMARY KEY (`[?c?]_zj3121123`)\n    ,PRIMARY KEY (`[?c?]_zj31211234`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;'),
	('201805011441376050000076', '201805011302113410000034', '11', 'JWeb_ExcelDow', '//一般引入文件\n\nimport system.base.annotation.H;\nimport system.base.annotation.M;\nimport system.web.JWeb;\nimport configuration.DBO;\nimport java.io.IOException;\nimport wx.web.services.bean.gdzc.GDZC;\nimport java.text.SimpleDateFormat;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.apache.poi.hssf.usermodel.HSSFRow;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\n\n/**\n *\n * @author wangchunzi\n */\n@H(&#34;/fileup/dow&#34;)\npublic class ${bean.mybean_mc}ExcelDow {\n\n    JWeb jw;\n\n    public ${bean.mybean_mc}ExcelDow(JWeb jw) {\n        this.jw = jw;\n    }\n    @M(&#34;/xiazai/excel&#34;)\n    public static void upAndSelect(JWeb jw) {\n        try {\n            HSSFWorkbook workbook = new HSSFWorkbook();\n            HSSFSheet sheet = workbook.createSheet(&#34;文档资料&#34;);\n            ${bean.mybean_mc}ExcelDowData vo = new ${bean.mybean_mc}ExcelDowData(sheet);\n            vo.setTitle();\n            List&#60;${bean.mybean_mc}&#62; list = DBO.service.S.select(${bean.mybean_mc}.class);\n            if (null != list) {\n                vo.setRowValue(list);\n            }\n            jw.response.setHeader(&#34;Content-Disposition&#34;, &#34;attachment; filename=&#34;\n                    + java.net.URLEncoder.encode(&#34;文档资料.xls&#34;, &#34;UTF-8&#34;)\n            );\n            workbook.write(jw.response.getOutputStream());\n        } catch (IOException ex) {\n        }\n    }\n}\n\nclass ${bean.mybean_mc}ExcelDowData{\n\n    private final HSSFSheet sheet;\n    private HSSFRow row;\n    private int i = 1;\n    private final SimpleDateFormat sf = new SimpleDateFormat(&#34;yyyy-MM-dd&#34;);\n    private final SimpleDateFormat sf2 = new SimpleDateFormat(&#34;yyyy-MM-dd HH:mm:ss&#34;);\n\n    public ${bean.mybean_mc}ExcelDowData(HSSFSheet sheet) {\n        this.sheet = sheet;\n    }\n\n    public void setTitle() {\n        row = sheet.createRow(0);\n\n        row.createCell(0).setCellValue(&#34;序号&#34;);\n        row.createCell(1).setCellValue(&#34;主键&#34;);\n        row.createCell(2).setCellValue(&#34;主键&#34;);\n        row.createCell(3).setCellValue(&#34;主键&#34;);\n        row.createCell(4).setCellValue(&#34;主键&#34;);\n        row.createCell(5).setCellValue(&#34;主键&#34;);\n    }\n\n    public void setRowValue(List&#60;${bean.mybean_mc}&#62; list) {\n      \n\n        for (${bean.mybean_mc} obj : list) {\n          row = sheet.createRow(i);\n          row.createCell(0).setCellValue(i++);\n          row.createCell(1).setCellValue(obj.get[?c?]_zj3121());//主键\n          row.createCell(2).setCellValue(obj.get[?c?]_zj31211());//主键\n          row.createCell(3).setCellValue(obj.get[?c?]_zj312112());//主键\n          row.createCell(4).setCellValue(obj.get[?c?]_zj3121123());//主键\n          row.createCell(5).setCellValue(obj.get[?c?]_zj31211234());//主键\n        }\n    }\n}\n'),
	('201805011441394660000077', '201805011302113410000034', '11', 'JWeb_ExcelUp', '//一般引入文件\nimport configuration.file.IniDataByExcelFileModel;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport system.base.annotation.H;\nimport system.base.annotation.M;\nimport system.web.JWeb;\nimport system.web.WebContext;\nimport system.web.file.FI;\nimport system.web.file.engine.FileEngine;\nimport configuration.DBO;\n\n/**\n *\n * @author wangchunzi\n */\n@H(&#34;/fileup/inidata&#34;)\npublic class ${bean.mybean_mc}ExcelUp {\n\n    JWeb jw;\n\n    public ${bean.mybean_mc}ExcelUp(JWeb jw) {\n        this.jw = jw;\n    }\n    @M(&#34;/fileup/excel&#34;)//fileup/excel.jw \n    //@system.web.power.ann.ZDY(zdy = power.hm.zdy.SQ_UA.class, value = &#34;C2_1&#34;)\n    public void up() {\n        FileEngine file = new FileEngine(jw.request);\n        FI upOne = file.upOne(IniDataByExcelFileModel.class);\n        ExcelTool et = new ExcelTool();\n        List&#60;${bean.mybean_mc}&#62; list = et.readExcelData(${bean.mybean_mc}.class, getClassMapShowName(), WebContext.getWebContext().WEB_PATH + upOne.path_saveName);\n        //返回json数据。注意,FI对象重写了toString,此方法现在返回的是json数据\n        for (${bean.mybean_mc} obj : list) {\n             jw.printOne(DBO.getJSONModel(&#34;-1&#34;, &#34;执行出错，xxxx（不能为空）。&#34;));//校对基本数据与格式是否符合\n             return;\n        }\n//如果需要人性化，请一条条添加入数据库\n        int i = DBO.service.A.addVast(list);\n        if (i == -1) {\n            jw.printOne(DBO.getJSONModel(&#34;-1&#34;, &#34;执行出错，请检查数据唯一性或合法性。&#34;));\n            return;\n        }\n        jw.printOne(i == 0 ? DBO.getJSONModel(&#34;0&#34;, &#34;执行失败，请检查数据格式&#34;)\n                : DBO.getJSONModel(&#34;1&#34;, &#34;执行成功。&#34;));\n\n    }\n\n    private Map&#60;String, String&#62; getClassMapShowName() {\n\n        Map&#60;String, String&#62; map = new HashMap();\n        map.put(&#34;主键&#34;, &#34;[?c?]_zj3&#34;);\n        map.put(&#34;主键&#34;, &#34;[?c?]_zj3121&#34;);\n        map.put(&#34;主键&#34;, &#34;[?c?]_zj31211&#34;);\n        map.put(&#34;主键&#34;, &#34;[?c?]_zj312112&#34;);\n        map.put(&#34;主键&#34;, &#34;[?c?]_zj3121123&#34;);\n        map.put(&#34;主键&#34;, &#34;[?c?]_zj31211234&#34;);\n        return map;\n    }\n}'),
	('201805011859232930000044', '201805011302113410000034', '11', 'JWeb_Bean', '@system.base.annotation.Table\npublic class ${bean.mybean_mc} {\n\n    @system.base.annotation.ID\n    private  String [?c?]_zj3 ;// 主键\n    @system.base.annotation.ID\n    private  String [?c?]_zj3121 ;// 主键\n    @system.base.annotation.ID\n    private  String [?c?]_zj31211 ;// 主键\n    @system.base.annotation.ID\n    private  String [?c?]_zj312112 ;// 主键\n    @system.base.annotation.ID\n    private  String [?c?]_zj3121123 ;// 主键\n    @system.base.annotation.ID\n    private  String [?c?]_zj31211234 ;// 主键\n\n    /**\n     * 设置 主键\n     *\n     * @param [?c?]_zj3 String\n     */\n    public void set[?c?]_zj3(String [?c?]_zj3) {\n        this.[?c?]_zj3=[?c?]_zj3;\n    }\n\n    /**\n     * 取得 主键\n     *\n     * @return String\n     */\n    public String get[?c?]_zj3() {\n        return this.[?c?]_zj3;\n    }\n    /**\n     * 设置 主键\n     *\n     * @param [?c?]_zj3121 String\n     */\n    public void set[?c?]_zj3121(String [?c?]_zj3121) {\n        this.[?c?]_zj3121=[?c?]_zj3121;\n    }\n\n    /**\n     * 取得 主键\n     *\n     * @return String\n     */\n    public String get[?c?]_zj3121() {\n        return this.[?c?]_zj3121;\n    }\n    /**\n     * 设置 主键\n     *\n     * @param [?c?]_zj31211 String\n     */\n    public void set[?c?]_zj31211(String [?c?]_zj31211) {\n        this.[?c?]_zj31211=[?c?]_zj31211;\n    }\n\n    /**\n     * 取得 主键\n     *\n     * @return String\n     */\n    public String get[?c?]_zj31211() {\n        return this.[?c?]_zj31211;\n    }\n    /**\n     * 设置 主键\n     *\n     * @param [?c?]_zj312112 String\n     */\n    public void set[?c?]_zj312112(String [?c?]_zj312112) {\n        this.[?c?]_zj312112=[?c?]_zj312112;\n    }\n\n    /**\n     * 取得 主键\n     *\n     * @return String\n     */\n    public String get[?c?]_zj312112() {\n        return this.[?c?]_zj312112;\n    }\n    /**\n     * 设置 主键\n     *\n     * @param [?c?]_zj3121123 String\n     */\n    public void set[?c?]_zj3121123(String [?c?]_zj3121123) {\n        this.[?c?]_zj3121123=[?c?]_zj3121123;\n    }\n\n    /**\n     * 取得 主键\n     *\n     * @return String\n     */\n    public String get[?c?]_zj3121123() {\n        return this.[?c?]_zj3121123;\n    }\n    /**\n     * 设置 主键\n     *\n     * @param [?c?]_zj31211234 String\n     */\n    public void set[?c?]_zj31211234(String [?c?]_zj31211234) {\n        this.[?c?]_zj31211234=[?c?]_zj31211234;\n    }\n\n    /**\n     * 取得 主键\n     *\n     * @return String\n     */\n    public String get[?c?]_zj31211234() {\n        return this.[?c?]_zj31211234;\n    }\n}'),
	('201805031437047100000002', '201805031136441180000063', 'Werwq7', 'JWeb_Bean', 'package ${package_bean};\n//${power_codeU}\n@system.base.annotation.Table\npublic class Werwq7 {\n\n    @system.base.annotation.ID\n    private  String werwq7_zj ;// 主键\n\n    /**\n     * 设置 主键\n     *\n     * @param werwq7_zj String\n     */\n    public void setwerwq7_zj(String werwq7_zj) {\n        this.werwq7_zj=werwq7_zj;\n    }\n\n    /**\n     * 取得 主键\n     *\n     * @return String\n     */\n    public String getwerwq7_zj() {\n        return this.werwq7_zj;\n    }\n}'),
	('201805031444167000000003', '201805031136441180000063', 'Werwq7', 'JWeb_Bean2', 'package ${package_bean};\n//${power_codeU}\n@system.base.annotation.Table\npublic class Werwq7 {\n\n    @system.base.annotation.ID\n    private  String werwq7_zj ;// 主键\n\n    /**\n     * 设置 主键\n     *\n     * @param werwq7_zj String\n     */\n    public void setwerwq7_zj(String werwq7_zj) {\n        this.werwq7_zj=werwq7_zj;\n    }\n\n    /**\n     * 取得 主键\n     *\n     * @return String\n     */\n    public String getwerwq7_zj() {\n        return this.werwq7_zj;\n    }\n}');
/*!40000 ALTER TABLE `MyModel` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `MyPackage` (
  `mypackage_id` char(24) NOT NULL,
  `mypackage_pid` char(24) NOT NULL,
  `mypackage_name` char(50) NOT NULL,
  PRIMARY KEY (`mypackage_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `MyPackage` DISABLE KEYS */;
INSERT INTO `MyPackage` (`mypackage_id`, `mypackage_pid`, `mypackage_name`) VALUES
	('201802191629277860000002', '0', 'erpwh'),
	('201802191634445960000003', '201802191629277860000002', 'wx.web.bean');
/*!40000 ALTER TABLE `MyPackage` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `Role` (
  `role_id` char(24) NOT NULL,
  `jsdj_zj` char(24) NOT NULL,
  `role_name` varchar(50) NOT NULL,
  `role_info` varchar(50) DEFAULT NULL,
  `role_create` datetime NOT NULL,
  `power` varchar(5000) DEFAULT NULL,
  `user_id` char(24) DEFAULT NULL,
  `user_name` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`role_id`),
  UNIQUE KEY `role_name_UNIQUE` (`role_name`),
  KEY `jsdj_zj` (`jsdj_zj`),
  KEY `role_create` (`role_create`),
  KEY `user_id` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `Role` DISABLE KEYS */;
INSERT INTO `Role` (`role_id`, `jsdj_zj`, `role_name`, `role_info`, `role_create`, `power`, `user_id`, `user_name`) VALUES
	('201802171406168450000003', '201707311429218510000002', 'ALL', '', '2018-02-17 14:06:16', 'Y101,Y101_12,Y101_12_1,Y101_12_2,Y101_11,Y101_11A,Y101_11_0,Y101_11S,Y101_11U,Y101_11D,Y101_1,Y101_2,Y101_2_1,Y101_2_2,Y101_2_3,Y101_13,Y101_3,Y101_4,Y101_4_1,Y101_4_2,Y101_4_3,Y101_5,Y101_6,Y101_6_1,Y101_6_2,Y101_6_3,Y101_7,Y101_8,Y101_8_1,Y101_8_2,Y101_8_3,Y101_14,Y101_9,Y101_10,Y101_10_1,Y101_10_2,Y101_10_3,Y101_15,Y101_15_1A,Y101_15_2,Y101_15_1S,Y101_15_1U,Y101_15_1D,Y101_18_1A,Y101_18_2,Y101_18_1S,Y101_18_1U,Y101_18_1D,Y101_19_1,Y101_16,Y101_16_1A,Y101_16_2,Y101_16_1S,Y101_16_1U,Y101_16_1D,Y101_17_1A,Y101_17_2,Y101_17_1S,Y101_17_1U,Y101_17_1D,Y100,Y100_6,Y100_6_2,Y100_0,Y100_1,Y100_1_1,Y100_1_2,Y100_1_3,Y100_2,Y100_3,Y100_3_1,Y100_3_2,Y100_3_3,J,J5,J51,J52,J51_1,J51_2,J51_3,J4,J41,J42,J43,J43_1,J43_2,J43_3,J44,J44_1,J44_2,J44_3,J44_4,J7_2,J7_2_1,J7_2_2,J7_2_2_1,J7_2_2_2,J7_2_2_3', '201802171404503510000002', 'G_Admin');
/*!40000 ALTER TABLE `Role` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `RY` (
  `ry_id` char(24) NOT NULL,
  `bm_id` char(24) NOT NULL,
  `bm_name` varchar(50) NOT NULL,
  `gw_id` char(24) DEFAULT NULL,
  `gw_name` varchar(50) DEFAULT NULL,
  `ry_cdate` datetime NOT NULL,
  `ry_style` int(11) NOT NULL,
  `ry_sort` int(11) NOT NULL,
  `ry_name` varchar(50) NOT NULL,
  `ry_sex` char(1) NOT NULL,
  `ry_email` varchar(150) DEFAULT NULL,
  `ry_phone` varchar(150) DEFAULT NULL,
  `ry_info` varchar(150) DEFAULT NULL,
  `ry_account` varchar(50) NOT NULL,
  `ry_password` varchar(50) NOT NULL,
  PRIMARY KEY (`ry_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `RY` DISABLE KEYS */;
INSERT INTO `RY` (`ry_id`, `bm_id`, `bm_name`, `gw_id`, `gw_name`, `ry_cdate`, `ry_style`, `ry_sort`, `ry_name`, `ry_sex`, `ry_email`, `ry_phone`, `ry_info`, `ry_account`, `ry_password`) VALUES
	('201711281619003970000001', '201708161039129690000004', '总经办', '', 'ERP工程师', '2017-03-20 00:00:00', 1, 3, '汪春滋', '男', 'wangchunzi@rarone.cc', '8893、17097600192', '22', 'wangchunzi', '123'),
	('201802171456293690000001', '201708161039129690000004', '总经办', NULL, 'ol', '2018-02-17 00:00:00', 1, 3, '90', '男', '', '', '', '89', '45');
/*!40000 ALTER TABLE `RY` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `Spage_index` (
  `spage_indexpage_zj` char(24) NOT NULL,
  `spage_indexpage_neirong` text NOT NULL,
  PRIMARY KEY (`spage_indexpage_zj`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `Spage_index` DISABLE KEYS */;
INSERT INTO `Spage_index` (`spage_indexpage_zj`, `spage_indexpage_neirong`) VALUES
	('1', '<p>hello</p>');
/*!40000 ALTER TABLE `Spage_index` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `Spage_jingyanku` (
  `spage_jingyanku_zj` char(24) NOT NULL,
  `spage_jingyanku_biaoti` varchar(200) NOT NULL,
  `spage_jingyanku_gjc` varchar(500) NOT NULL,
  `spage_jingyanku_neirong` text NOT NULL,
  `spage_jingyanku_fabushijian` varchar(30) NOT NULL,
  `spage_jingyanku_zhidanren` varchar(50) NOT NULL,
  `spage_jingyanku_zhidanren_zj` char(24) NOT NULL,
  `jingyankufl_id` varchar(50) NOT NULL,
  `jingyankufl_name` char(24) NOT NULL,
  `spage_jingyanku_zhidanshijian` varchar(21) NOT NULL,
  PRIMARY KEY (`spage_jingyanku_zj`),
  KEY `spage_jingyanku_biaoti` (`spage_jingyanku_biaoti`),
  KEY `spage_jingyanku_gjc` (`spage_jingyanku_gjc`),
  KEY `jingyankufl_id` (`jingyankufl_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `Spage_jingyanku` DISABLE KEYS */;
INSERT INTO `Spage_jingyanku` (`spage_jingyanku_zj`, `spage_jingyanku_biaoti`, `spage_jingyanku_gjc`, `spage_jingyanku_neirong`, `spage_jingyanku_fabushijian`, `spage_jingyanku_zhidanren`, `spage_jingyanku_zhidanren_zj`, `jingyankufl_id`, `jingyankufl_name`, `spage_jingyanku_zhidanshijian`) VALUES
	('201802171414161490000005', '2', '2', '<p>123123123</p>', '2018-02-17 14:14:16', '汪春滋', '201711281619003970000001', '201801291207394470000007', '前言', '2018-02-17 14:14:16'),
	('201803031822013010000002', '12', '3', '<p>23</p>', '2018-03-03 18:22:01', '汪春滋', '201711281619003970000001', '201801291207394470000007', '前言', '2018-03-03 18:22:01');
/*!40000 ALTER TABLE `Spage_jingyanku` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `Spage_notice` (
  `spage_notice_zj` char(24) NOT NULL,
  `spage_notice_biaoti` varchar(200) NOT NULL,
  `spage_notice_neirong` text NOT NULL,
  `spage_notice_fabushijian` varchar(30) NOT NULL,
  `spage_notice_zhidanren` varchar(50) NOT NULL,
  `spage_notice_zhidanren_zj` char(24) NOT NULL,
  `spage_notice_zhidanshijian` varchar(21) NOT NULL,
  PRIMARY KEY (`spage_notice_zj`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `Spage_notice` DISABLE KEYS */;
INSERT INTO `Spage_notice` (`spage_notice_zj`, `spage_notice_biaoti`, `spage_notice_neirong`, `spage_notice_fabushijian`, `spage_notice_zhidanren`, `spage_notice_zhidanren_zj`, `spage_notice_zhidanshijian`) VALUES
	('201802171414023480000004', '090', '<p><img src="/JWebGW/ueditor/jsp/upload/image/20180217/1518850690282066249.png" title="1518850690282066249.png" alt="jweb.png"/></p>', '', '汪春滋', '201711281619003970000001', '2018-02-17 14:14:02'),
	('201802171529214150000001', '90', '<p><img title="1518852526454003993.png" alt="jweb.png" src="/ueditor/jsp/upload/image/20180217/1518852526454003993.png"/><img width="173" height="30" title="1518852526454003993.png" style="width: 420px; height: 442px;" alt="1518852526454003993.png" src="/ueditor/jsp/upload/image/20180217/1518852526454003993.png" border="0" vspace="0"/></p>', '2018-02-17 15:29:21', '汪春滋', '201711281619003970000001', '2018-02-17 15:29:21'),
	('201803031821035720000001', '123123', '<p>wwqw<br/></p>', '2018-03-03 18:21:03', '汪春滋', '201711281619003970000001', '2018-03-03 18:21:03');
/*!40000 ALTER TABLE `Spage_notice` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `User` (
  `user_id` char(24) NOT NULL,
  `role_id` varchar(5000) DEFAULT NULL,
  `power_id` varchar(5000) DEFAULT NULL,
  PRIMARY KEY (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `User` DISABLE KEYS */;
INSERT INTO `User` (`user_id`, `role_id`, `power_id`) VALUES
	('201711281619003970000001', '201802171406168450000003', ',Y100_4_2,Y100_4,Y100_4_1');
/*!40000 ALTER TABLE `User` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `Yushizhi` (
  `yushizhi_zj` char(24) NOT NULL,
  `yushizhi_mc` varchar(255) NOT NULL,
  `yushizhifl_id` char(24) NOT NULL,
  `yushizhifl_name` varchar(50) NOT NULL,
  `yushizhi_bz` varchar(255) DEFAULT NULL,
  `yushizhi_px` int(11) NOT NULL,
  PRIMARY KEY (`yushizhi_zj`),
  KEY `yushizhi_mc` (`yushizhi_mc`),
  KEY `yushizhifl_id` (`yushizhifl_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `Yushizhi` DISABLE KEYS */;
INSERT INTO `Yushizhi` (`yushizhi_zj`, `yushizhi_mc`, `yushizhifl_id`, `yushizhifl_name`, `yushizhi_bz`, `yushizhi_px`) VALUES
	('201804241242464470000267', '空', '201804181456266560000001', '[bean]模板预设', '', 0),
	('201804241243054090000300', 'JWeb框架base方案', '201804181456266560000001', '[bean]模板预设', '', 1),
	('201804241704114930000051', '默认', '201804181456341320000002', '[fields]属性模板预设', '', 0),
	('201804241709053010000090', '主键', '201804181456341320000002', '[fields]属性模板预设', '', 1),
	('201805020823368050000033', '制单时间', '201804181456341320000002', '[fields]属性模板预设', '自建', 2),
	('201805021219595330000111', '审批时间', '201804181456341320000002', '[fields]属性模板预设', '', 3),
	('201805021233432600000169', '状态0|1|2|3', '201804181456341320000002', '[fields]属性模板预设', '', 4),
	('201805021409251960000189', '文本80-可空', '201804181456341320000002', '[fields]属性模板预设', '', 5),
	('201805021410371060000209', '文本80-非空', '201804181456341320000002', '[fields]属性模板预设', '', 6),
	('201805021420542310000305', '文本80-非空与索引', '201804181456341320000002', '[fields]属性模板预设', '', 7),
	('201805021423266950000325', '文章-非空', '201804181456341320000002', '[fields]属性模板预设', '', 8),
	('201805021425566320000345', '文章-可空', '201804181456341320000002', '[fields]属性模板预设', '', 9);
/*!40000 ALTER TABLE `Yushizhi` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `Yushizhi2` (
  `yushizhi2_zj` char(24) NOT NULL,
  `yushizhi2_bz` varchar(50) DEFAULT NULL,
  `yushizhi2_key` varchar(200) NOT NULL,
  `yushizhi2_value` text DEFAULT NULL,
  `yushizhi_zj` char(24) NOT NULL,
  PRIMARY KEY (`yushizhi2_zj`),
  KEY `yushizhi2_key` (`yushizhi2_key`),
  KEY `yushizhi_zj` (`yushizhi_zj`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `Yushizhi2` DISABLE KEYS */;
INSERT INTO `Yushizhi2` (`yushizhi2_zj`, `yushizhi2_bz`, `yushizhi2_key`, `yushizhi2_value`, `yushizhi_zj`) VALUES
	('201804241814361240000129', '', 'mybeanfield_bz', '', '201804241704114930000051'),
	('201804241814361240000130', 'Date格式', 'mybeanfield_dateformat', '', '201804241704114930000051'),
	('201804241814361240000131', '作用域', 'c_zyy', 'private', '201804241704114930000051'),
	('201804241814361240000132', '类型', 'c_lx', 'String', '201804241704114930000051'),
	('201804241814361240000133', '属性名', 'c_mc', '', '201804241704114930000051'),
	('201804241814361240000134', '备注', 'c_bz', '', '201804241704114930000051'),
	('201804241814361240000135', 'get方法', 'c_setmethod', '', '201804241704114930000051'),
	('201804241814361240000136', ' t属性名 锁定等于 c属性名', 't_mc', '', '201804241704114930000051'),
	('201804241814361250000137', 't类型', 't_lx', 'VARCHAR', '201804241704114930000051'),
	('201804241814361250000138', 't索引', 't_sy', 'f', '201804241704114930000051'),
	('201804241814361250000139', '是否为空', 't_yxkong', 's', '201804241704114930000051'),
	('201804241814361250000140', '长度', 't_cd', '', '201804241704114930000051'),
	('201804241814361250000141', 't备注', 't_bz', '', '201804241704114930000051'),
	('201804241814361250000142', 'v正则表达式', 'v_zzbds', '', '201804241704114930000051'),
	('201804241814361250000143', 'v错误信息', 'v_cuowuxx', '', '201804241704114930000051'),
	('201804241814361250000144', 'v是否必须检查', 'v_bxjiancha', '', '201804241704114930000051'),
	('201804241814361250000145', 'h类型', 'h_lx', '', '201804241704114930000051'),
	('201804241814361250000146', 'h脚本校验', 'h_jb ', 'f', '201804241704114930000051'),
	('201804241814361250000147', 'e展示名', 'e_mc', '', '201804241704114930000051'),
	('201805020808553000000001', 'bean名必定用户输入', 'mybean_mc', '', '201804241242464470000267'),
	('201805020808553010000002', '备注', 'mybean_bz', '', '201804241242464470000267'),
	('201805020808553010000003', 'bean存放的路径', 'package_bean', '', '201804241242464470000267'),
	('201805020808553010000004', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', '', '201804241242464470000267'),
	('201805020808553010000005', 'soo名称 .java', 'name_soo', '', '201804241242464470000267'),
	('201805020808553010000006', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', '', '201804241242464470000267'),
	('201805020808553010000007', 'service名称  .java', 'name_service', '', '201804241242464470000267'),
	('201805020808553010000008', 'web入口类 存放的路径', 'package_hm', '', '201804241242464470000267'),
	('201805020808553020000009', 'web入口类-添加操作的类名  .java', 'name_hmA', '', '201804241242464470000267'),
	('201805020808553020000010', 'web入口类-删除操作的类名  .java', 'name_hmD', '', '201804241242464470000267'),
	('201805020808553020000011', 'web入口类-修改操作的类名  .java', 'name_hmU', '', '201804241242464470000267'),
	('201805020808553020000012', 'web入口类-查询操作的类名  .java', 'name_hmS', '', '201804241242464470000267'),
	('201805020808553020000013', '校验类 存放的路径', 'package_validate', '', '201804241242464470000267'),
	('201805020808553020000014', '校验类名  .java', 'name_validate', '', '201804241242464470000267'),
	('201805020808553020000015', '缓存处理类 存放的路径', 'package_cache', '', '201804241242464470000267'),
	('201805020808553020000016', '缓存处理类名  .java', 'name_cache', '', '201804241242464470000267'),
	('201805020808553020000017', 'web入口 临时装箱用的类  存放的路径', 'package_vo', '', '201804241242464470000267'),
	('201805020808553020000018', 'vo类名  .java', 'name_vo', '', '201804241242464470000267'),
	('201805020808553030000019', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', '', '201804241242464470000267'),
	('201805020808553030000020', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', '', '201804241242464470000267'),
	('201805020808553030000021', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', '', '201804241242464470000267'),
	('201805020808553030000022', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', '', '201804241242464470000267'),
	('201805020808553030000023', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', '', '201804241242464470000267'),
	('201805020808553030000024', 'js 存放的路径', 'vpackage_admin_js', '', '201804241242464470000267'),
	('201805020808553030000025', 'js 名称 .js', 'vname_admin_js', '', '201804241242464470000267'),
	('201805020808553030000026', 'css 存放的路径', 'vpackage_admin_css', '', '201804241242464470000267'),
	('201805020808553030000027', 'css 名称 .css', 'vname_admin_css', '', '201804241242464470000267'),
	('201805020808553030000028', '权限代码', 'power_code', '', '201804241242464470000267'),
	('201805020808553030000029', '权限代码 添加', 'power_codeA', '', '201804241242464470000267'),
	('201805020808553040000030', '权限代码 删除', 'power_codeD', '', '201804241242464470000267'),
	('201805020808553040000031', '权限代码 查询', 'power_codeS', '', '201804241242464470000267'),
	('201805020808553040000032', '权限代码 修改', 'power_codeU', '', '201804241242464470000267'),
	('201805020900204850000092', '制单时间', 'mybeanfield_bz', '制单时间', '201805020823368050000033'),
	('201805020900204850000093', 'Date格式', 'mybeanfield_dateformat', 'yyyy-MM-dd HH:mm:ss', '201805020823368050000033'),
	('201805020900204850000094', '作用域', 'c_zyy', 'private', '201805020823368050000033'),
	('201805020900204850000095', '类型', 'c_lx', 'Date', '201805020823368050000033'),
	('201805020900204850000096', '属性名', 'c_mc', '[?c?]_zhidanshijian', '201805020823368050000033'),
	('201805020900204850000097', '备注', 'c_bz', '制单时间', '201805020823368050000033'),
	('201805020900204850000098', 'get方法', 'c_setmethod', '', '201805020823368050000033'),
	('201805020900204850000099', ' t属性名 锁定等于 c属性名', 't_mc', '', '201805020823368050000033'),
	('201805020900204850000100', 't类型', 't_lx', 'DATETIME', '201805020823368050000033'),
	('201805020900204850000101', 't索引', 't_sy', 'f', '201805020823368050000033'),
	('201805020900204850000102', '是否为空', 't_yxkong', 'f', '201805020823368050000033'),
	('201805020900204850000103', '长度', 't_cd', '19', '201805020823368050000033'),
	('201805020900204850000104', 't备注', 't_bz', '', '201805020823368050000033'),
	('201805020900204850000105', 'v正则表达式', 'v_zzbds', '&#34;[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}&#34;', '201805020823368050000033'),
	('201805020900204850000106', 'v错误信息', 'v_cuowuxx', '&#34;制单时间 :请输入日期。例1988-08-21 12:30:59&#34;', '201805020823368050000033'),
	('201805020900204850000107', 'v是否必须检查', 'v_bxjiancha', 'w', '201805020823368050000033'),
	('201805020900204860000108', 'h类型', 'h_lx', 'date', '201805020823368050000033'),
	('201805020900204860000109', 'h脚本校验', 'h_jb ', 'f', '201805020823368050000033'),
	('201805020900204860000110', 'e展示名', 'e_mc', '制单时间', '201805020823368050000033'),
	('201805021224190730000150', '', 'mybeanfield_bz', '审批时间', '201805021219595330000111'),
	('201805021224190730000151', 'Date格式', 'mybeanfield_dateformat', 'yyyy-MM-dd HH:mm:ss', '201805021219595330000111'),
	('201805021224190730000152', '作用域', 'c_zyy', 'private', '201805021219595330000111'),
	('201805021224190730000153', '类型', 'c_lx', 'Date', '201805021219595330000111'),
	('201805021224190730000154', '属性名', 'c_mc', '[?c?]_shenpishijian', '201805021219595330000111'),
	('201805021224190730000155', '备注', 'c_bz', '审批时间', '201805021219595330000111'),
	('201805021224190730000156', 'get方法', 'c_setmethod', '', '201805021219595330000111'),
	('201805021224190730000157', ' t属性名 锁定等于 c属性名', 't_mc', '', '201805021219595330000111'),
	('201805021224190730000158', 't类型', 't_lx', 'DATETIME', '201805021219595330000111'),
	('201805021224190730000159', 't索引', 't_sy', 'f', '201805021219595330000111'),
	('201805021224190730000160', '是否为空', 't_yxkong', 's', '201805021219595330000111'),
	('201805021224190730000161', '长度', 't_cd', '19', '201805021219595330000111'),
	('201805021224190730000162', 't备注', 't_bz', '审批时间', '201805021219595330000111'),
	('201805021224190730000163', 'v正则表达式', 'v_zzbds', '&#34;[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}&#34;', '201805021219595330000111'),
	('201805021224190730000164', 'v错误信息', 'v_cuowuxx', '&#34;制单时间 :请输入日期。例1988-08-21 12:30:59&#34;', '201805021219595330000111'),
	('201805021224190740000165', 'v是否必须检查', 'v_bxjiancha', 'w', '201805021219595330000111'),
	('201805021224190740000166', 'h类型', 'h_lx', 'date', '201805021219595330000111'),
	('201805021224190740000167', 'h脚本校验', 'h_jb ', 'f', '201805021219595330000111'),
	('201805021224190740000168', 'e展示名', 'e_mc', '审批时间', '201805021219595330000111'),
	('201805021233432600000170', '', 'mybeanfield_bz', '状态', '201805021233432600000169'),
	('201805021233432600000171', 'Date格式', 'mybeanfield_dateformat', '', '201805021233432600000169'),
	('201805021233432600000172', '作用域', 'c_zyy', 'private', '201805021233432600000169'),
	('201805021233432600000173', '类型', 'c_lx', 'String', '201805021233432600000169'),
	('201805021233432600000174', '属性名', 'c_mc', '[?c?]_style', '201805021233432600000169'),
	('201805021233432600000175', '备注', 'c_bz', '状态', '201805021233432600000169'),
	('201805021233432600000176', 'get方法', 'c_setmethod', '', '201805021233432600000169'),
	('201805021233432600000177', ' t属性名 锁定等于 c属性名', 't_mc', '', '201805021233432600000169'),
	('201805021233432600000178', 't类型', 't_lx', 'CHAR', '201805021233432600000169'),
	('201805021233432600000179', 't索引', 't_sy', 's', '201805021233432600000169'),
	('201805021233432600000180', '是否为空', 't_yxkong', 'f', '201805021233432600000169'),
	('201805021233432600000181', '长度', 't_cd', '1', '201805021233432600000169'),
	('201805021233432600000182', 't备注', 't_bz', '状态', '201805021233432600000169'),
	('201805021233432600000183', 'v正则表达式', 'v_zzbds', '&#34;[0|1|2|3]{1}&#34;', '201805021233432600000169'),
	('201805021233432600000184', 'v错误信息', 'v_cuowuxx', '&#34;:状态异常&#34;', '201805021233432600000169'),
	('201805021233432600000185', 'v是否必须检查', 'v_bxjiancha', 'f', '201805021233432600000169'),
	('201805021233432600000186', 'h类型', 'h_lx', 'select', '201805021233432600000169'),
	('201805021233432600000187', 'h脚本校验', 'h_jb ', 's', '201805021233432600000169'),
	('201805021233432600000188', 'e展示名', 'e_mc', '状态', '201805021233432600000169'),
	('201805021412307070000248', '', 'mybeanfield_bz', '', '201805021410371060000209'),
	('201805021412307070000249', 'Date格式', 'mybeanfield_dateformat', '', '201805021410371060000209'),
	('201805021412307070000250', '作用域', 'c_zyy', 'private', '201805021410371060000209'),
	('201805021412307070000251', '类型', 'c_lx', 'String', '201805021410371060000209'),
	('201805021412307070000252', '属性名', 'c_mc', '[?c?]_', '201805021410371060000209'),
	('201805021412307070000253', '备注', 'c_bz', '', '201805021410371060000209'),
	('201805021412307070000254', 'get方法', 'c_setmethod', '', '201805021410371060000209'),
	('201805021412307070000255', ' t属性名 锁定等于 c属性名', 't_mc', '', '201805021410371060000209'),
	('201805021412307070000256', 't类型', 't_lx', 'VARCHAR', '201805021410371060000209'),
	('201805021412307080000257', 't索引', 't_sy', 'f', '201805021410371060000209'),
	('201805021412307080000258', '是否为空', 't_yxkong', 'f', '201805021410371060000209'),
	('201805021412307080000259', '长度', 't_cd', '80', '201805021410371060000209'),
	('201805021412307080000260', 't备注', 't_bz', '', '201805021410371060000209'),
	('201805021412307080000261', 'v正则表达式', 'v_zzbds', '&#34;[&#92;&#92;w&#92;&#92;W]{1,80}&#34;', '201805021410371060000209'),
	('201805021412307080000262', 'v错误信息', 'v_cuowuxx', '&#34;:文本异常。文本为空或长度超80字符&#34;', '201805021410371060000209'),
	('201805021412307080000263', 'v是否必须检查', 'v_bxjiancha', 's', '201805021410371060000209'),
	('201805021412307080000264', 'h类型', 'h_lx', 'text', '201805021410371060000209'),
	('201805021412307080000265', 'h脚本校验', 'h_jb ', 'f', '201805021410371060000209'),
	('201805021412307080000266', 'e展示名', 'e_mc', '', '201805021410371060000209'),
	('201805021419312700000286', '', 'mybeanfield_bz', '', '201805021409251960000189'),
	('201805021419312700000287', 'Date格式', 'mybeanfield_dateformat', '', '201805021409251960000189'),
	('201805021419312700000288', '作用域', 'c_zyy', 'private', '201805021409251960000189'),
	('201805021419312700000289', '类型', 'c_lx', 'String', '201805021409251960000189'),
	('201805021419312700000290', '属性名', 'c_mc', '[?c?]_', '201805021409251960000189'),
	('201805021419312700000291', '备注', 'c_bz', '', '201805021409251960000189'),
	('201805021419312700000292', 'get方法', 'c_setmethod', '', '201805021409251960000189'),
	('201805021419312700000293', ' t属性名 锁定等于 c属性名', 't_mc', '', '201805021409251960000189'),
	('201805021419312700000294', 't类型', 't_lx', 'VARCHAR', '201805021409251960000189'),
	('201805021419312700000295', 't索引', 't_sy', 'f', '201805021409251960000189'),
	('201805021419312700000296', '是否为空', 't_yxkong', 's', '201805021409251960000189'),
	('201805021419312700000297', '长度', 't_cd', '80', '201805021409251960000189'),
	('201805021419312700000298', 't备注', 't_bz', '', '201805021409251960000189'),
	('201805021419312700000299', 'v正则表达式', 'v_zzbds', '&#34;[&#92;&#92;w&#92;&#92;W]{0,80}&#34;', '201805021409251960000189'),
	('201805021419312700000300', 'v错误信息', 'v_cuowuxx', '&#34;:文本异常。长度超80字符&#34;', '201805021409251960000189'),
	('201805021419312700000301', 'v是否必须检查', 'v_bxjiancha', 'f', '201805021409251960000189'),
	('201805021419312700000302', 'h类型', 'h_lx', 'text', '201805021409251960000189'),
	('201805021419312700000303', 'h脚本校验', 'h_jb ', 'f', '201805021409251960000189'),
	('201805021419312700000304', 'e展示名', 'e_mc', '', '201805021409251960000189'),
	('201805021420542310000306', '', 'mybeanfield_bz', '', '201805021420542310000305'),
	('201805021420542310000307', 'Date格式', 'mybeanfield_dateformat', '', '201805021420542310000305'),
	('201805021420542310000308', '作用域', 'c_zyy', 'private', '201805021420542310000305'),
	('201805021420542310000309', '类型', 'c_lx', 'String', '201805021420542310000305'),
	('201805021420542310000310', '属性名', 'c_mc', '[?c?]_', '201805021420542310000305'),
	('201805021420542310000311', '备注', 'c_bz', '', '201805021420542310000305'),
	('201805021420542310000312', 'get方法', 'c_setmethod', '', '201805021420542310000305'),
	('201805021420542310000313', ' t属性名 锁定等于 c属性名', 't_mc', '', '201805021420542310000305'),
	('201805021420542310000314', 't类型', 't_lx', 'VARCHAR', '201805021420542310000305'),
	('201805021420542310000315', 't索引', 't_sy', 's', '201805021420542310000305'),
	('201805021420542310000316', '是否为空', 't_yxkong', 'f', '201805021420542310000305'),
	('201805021420542310000317', '长度', 't_cd', '80', '201805021420542310000305'),
	('201805021420542310000318', 't备注', 't_bz', '', '201805021420542310000305'),
	('201805021420542310000319', 'v正则表达式', 'v_zzbds', '&#34;[&#92;&#92;w&#92;&#92;W]{1,80}&#34;', '201805021420542310000305'),
	('201805021420542310000320', 'v错误信息', 'v_cuowuxx', '&#34;:文本异常。文本为空或长度超80字符&#34;', '201805021420542310000305'),
	('201805021420542310000321', 'v是否必须检查', 'v_bxjiancha', 's', '201805021420542310000305'),
	('201805021420542310000322', 'h类型', 'h_lx', 'text', '201805021420542310000305'),
	('201805021420542310000323', 'h脚本校验', 'h_jb ', 'f', '201805021420542310000305'),
	('201805021420542310000324', 'e展示名', 'e_mc', '', '201805021420542310000305'),
	('201805021423266950000326', '', 'mybeanfield_bz', '', '201805021423266950000325'),
	('201805021423266950000327', 'Date格式', 'mybeanfield_dateformat', '', '201805021423266950000325'),
	('201805021423266950000328', '作用域', 'c_zyy', 'private', '201805021423266950000325'),
	('201805021423266950000329', '类型', 'c_lx', 'String', '201805021423266950000325'),
	('201805021423266950000330', '属性名', 'c_mc', '[?c?]_', '201805021423266950000325'),
	('201805021423266950000331', '备注', 'c_bz', '', '201805021423266950000325'),
	('201805021423266950000332', 'get方法', 'c_setmethod', '', '201805021423266950000325'),
	('201805021423266950000333', ' t属性名 锁定等于 c属性名', 't_mc', '', '201805021423266950000325'),
	('201805021423266950000334', 't类型', 't_lx', 'TEXT', '201805021423266950000325'),
	('201805021423266950000335', 't索引', 't_sy', 'f', '201805021423266950000325'),
	('201805021423266950000336', '是否为空', 't_yxkong', 'f', '201805021423266950000325'),
	('201805021423266950000337', '长度', 't_cd', '', '201805021423266950000325'),
	('201805021423266950000338', 't备注', 't_bz', '', '201805021423266950000325'),
	('201805021423266950000339', 'v正则表达式', 'v_zzbds', '&#34;[&#92;&#92;w&#92;&#92;W]+&#34;', '201805021423266950000325'),
	('201805021423266950000340', 'v错误信息', 'v_cuowuxx', '&#34;:文本异常. 不能为空&#34;', '201805021423266950000325'),
	('201805021423266950000341', 'v是否必须检查', 'v_bxjiancha', 's', '201805021423266950000325'),
	('201805021423266950000342', 'h类型', 'h_lx', 'ueditor', '201805021423266950000325'),
	('201805021423266950000343', 'h脚本校验', 'h_jb ', 's', '201805021423266950000325'),
	('201805021423266950000344', 'e展示名', 'e_mc', '', '201805021423266950000325'),
	('201805021425566320000346', '', 'mybeanfield_bz', '', '201805021425566320000345'),
	('201805021425566320000347', 'Date格式', 'mybeanfield_dateformat', '', '201805021425566320000345'),
	('201805021425566320000348', '作用域', 'c_zyy', 'private', '201805021425566320000345'),
	('201805021425566320000349', '类型', 'c_lx', 'String', '201805021425566320000345'),
	('201805021425566320000350', '属性名', 'c_mc', '[?c?]_', '201805021425566320000345'),
	('201805021425566320000351', '备注', 'c_bz', '', '201805021425566320000345'),
	('201805021425566320000352', 'get方法', 'c_setmethod', '', '201805021425566320000345'),
	('201805021425566320000353', ' t属性名 锁定等于 c属性名', 't_mc', '', '201805021425566320000345'),
	('201805021425566320000354', 't类型', 't_lx', 'TEXT', '201805021425566320000345'),
	('201805021425566320000355', 't索引', 't_sy', 'f', '201805021425566320000345'),
	('201805021425566320000356', '是否为空', 't_yxkong', 'f', '201805021425566320000345'),
	('201805021425566320000357', '长度', 't_cd', '', '201805021425566320000345'),
	('201805021425566320000358', 't备注', 't_bz', '', '201805021425566320000345'),
	('201805021425566320000359', 'v正则表达式', 'v_zzbds', '&#34;[&#92;&#92;w&#92;&#92;W]+&#34;', '201805021425566320000345'),
	('201805021425566320000360', 'v错误信息', 'v_cuowuxx', '&#34;:文本异常. 不能为空&#34;', '201805021425566320000345'),
	('201805021425566320000361', 'v是否必须检查', 'v_bxjiancha', 'w', '201805021425566320000345'),
	('201805021425566320000362', 'h类型', 'h_lx', 'ueditor', '201805021425566320000345'),
	('201805021425566320000363', 'h脚本校验', 'h_jb ', 's', '201805021425566320000345'),
	('201805021425566320000364', 'e展示名', 'e_mc', '', '201805021425566320000345'),
	('201805031136192120000033', 'bean存放的路径', 'package_bean', 'wx.web.base.bean', '201804241243054090000300'),
	('201805031136192120000034', 'soo存放的路径,处理对象成标准sql语句。', 'package_soo', 'wx.web.base.soo', '201804241243054090000300'),
	('201805031136192120000035', 'soo名称 .java', 'name_soo', '${bean_mc}Soo', '201804241243054090000300'),
	('201805031136192120000036', 'service存放的路径.模板交互时，一般集合soo返回的语句到此进行批处理。', 'package_service', 'wx.web.base.service', '201804241243054090000300'),
	('201805031136192120000037', 'service名称  .java', 'name_service', '${bean_mc}Service', '201804241243054090000300'),
	('201805031136192120000038', 'web入口类 存放的路径', 'package_hm', 'wx.web.base.hm.[?c?]', '201804241243054090000300'),
	('201805031136192120000039', 'web入口类-添加操作的类名  .java', 'name_hmA', '${bean_mc}ADU', '201804241243054090000300'),
	('201805031136192120000040', 'web入口类-删除操作的类名  .java', 'name_hmD', '${bean_mc}ADU', '201804241243054090000300'),
	('201805031136192120000041', 'web入口类-修改操作的类名  .java', 'name_hmU', '${bean_mc}ADU', '201804241243054090000300'),
	('201805031136192120000042', 'web入口类-查询操作的类名  .java', 'name_hmS', '[?c?]S', '201804241243054090000300'),
	('201805031136192120000043', '校验类 存放的路径', 'package_validate', 'wx.web.base.hm.[?c?].validate', '201804241243054090000300'),
	('201805031136192120000044', '校验类名  .java', 'name_validate', '${bean_mc}Validate', '201804241243054090000300'),
	('201805031136192120000045', '缓存处理类 存放的路径', 'package_cache', 'wx.web.base.hm.[?c?].cache', '201804241243054090000300'),
	('201805031136192120000046', '缓存处理类名  .java', 'name_cache', '${bean_mc}Cache', '201804241243054090000300'),
	('201805031136192120000047', 'web入口 临时装箱用的类  存放的路径', 'package_vo', 'wx.web.base.hm.[?c?].vo', '201804241243054090000300'),
	('201805031136192120000048', 'vo类名  .java', 'name_vo', '${bean_mc}VO', '201804241243054090000300'),
	('201805031136192120000049', 'jsp 前端管理页面 存放的路径', 'vpackage_admin', 'admin.base.[?c?]', '201804241243054090000300'),
	('201805031136192120000050', 'jsp 前端管理页 添加名称 .jsp ', 'vname_adminA', '[?c?]_A', '201804241243054090000300'),
	('201805031136192120000051', 'jsp 前端管理页 删除名称 .jsp 一般集成在列表处', 'vname_adminD', '[?c?]', '201804241243054090000300'),
	('201805031136192120000052', 'jsp 前端管理页 列表名称 .jsp', 'vname_adminS', '[?c?]', '201804241243054090000300'),
	('201805031136192130000053', 'jsp 前端管理页 修改名称 .jsp 一般集成在列表处', 'vname_adminU', '[?c?]_U', '201804241243054090000300'),
	('201805031136192130000054', 'js 存放的路径', 'vpackage_admin_js', 'admin.base.[?c?].js', '201804241243054090000300'),
	('201805031136192130000055', 'js 名称 .js', 'vname_admin_js', '[?c?]', '201804241243054090000300'),
	('201805031136192130000056', 'css 存放的路径', 'vpackage_admin_css', 'admin.base.[?c?].css', '201804241243054090000300'),
	('201805031136192130000057', 'css 名称 .css', 'vname_admin_css', '[?c?]', '201804241243054090000300'),
	('201805031136192130000058', '权限代码', 'power_code', '', '201804241243054090000300'),
	('201805031136192130000059', '权限代码 添加', 'power_codeA', '${power_code}A', '201804241243054090000300'),
	('201805031136192130000060', '权限代码 删除', 'power_codeD', '${power_code}D', '201804241243054090000300'),
	('201805031136192130000061', '权限代码 查询', 'power_codeS', '${power_code}S', '201804241243054090000300'),
	('201805031136192130000062', '权限代码 修改', 'power_codeU', '${power_code}U', '201804241243054090000300'),
	('201805040856143840000035', '', 'mybeanfield_bz', '主键', '201804241709053010000090'),
	('201805040856143840000036', 'Date格式', 'mybeanfield_dateformat', '', '201804241709053010000090'),
	('201805040856143840000037', '作用域', 'c_zyy', 'private', '201804241709053010000090'),
	('201805040856143840000038', '类型', 'c_lx', 'String', '201804241709053010000090'),
	('201805040856143840000039', '属性名', 'c_mc', '[?c?]_zj', '201804241709053010000090'),
	('201805040856143840000040', '备注', 'c_bz', '主键', '201804241709053010000090'),
	('201805040856143840000041', ' t属性名 锁定等于 c属性名', 't_mc', '[?c?]_zj', '201804241709053010000090'),
	('201805040856143840000042', 't类型', 't_lx', 'CHAR', '201804241709053010000090'),
	('201805040856143840000043', 't索引', 't_sy', 'zj', '201804241709053010000090'),
	('201805040856143840000044', '是否为空', 't_yxkong', 'f', '201804241709053010000090'),
	('201805040856143840000045', '长度', 't_cd', '24', '201804241709053010000090'),
	('201805040856143840000046', 't备注', 't_bz', '', '201804241709053010000090'),
	('201805040856143840000047', 'v正则表达式', 'v_zzbds', '&#34;[1-9]{1}[0-9]{23}&#34;', '201804241709053010000090'),
	('201805040856143850000048', 'v错误信息', 'v_cuowuxx', '&#34;主键丢失&#34;', '201804241709053010000090'),
	('201805040856143850000049', 'v是否必须检查', 'v_bxjiancha', 'f', '201804241709053010000090'),
	('201805040856143850000050', 'h类型', 'h_lx', 'text', '201804241709053010000090'),
	('201805040856143850000051', 'h脚本校验', 'h_jb ', 'f', '201804241709053010000090'),
	('201805040856143850000052', 'e展示名', 'e_mc', '', '201804241709053010000090');
/*!40000 ALTER TABLE `Yushizhi2` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `YushizhiFL` (
  `yushizhifl_id` char(24) NOT NULL,
  `yushizhifl_pid` char(24) NOT NULL,
  `yushizhifl_name` char(50) NOT NULL,
  PRIMARY KEY (`yushizhifl_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40000 ALTER TABLE `YushizhiFL` DISABLE KEYS */;
INSERT INTO `YushizhiFL` (`yushizhifl_id`, `yushizhifl_pid`, `yushizhifl_name`) VALUES
	('201804181456266560000001', '0', '[bean]模板预设'),
	('201804181456341320000002', '0', '[fields]属性模板预设');
/*!40000 ALTER TABLE `YushizhiFL` ENABLE KEYS */;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;